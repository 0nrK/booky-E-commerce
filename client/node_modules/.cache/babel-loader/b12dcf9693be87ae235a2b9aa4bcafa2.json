{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nconst initialState = {\n  cartItems: [],\n  total: 0,\n  count: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      const isDuplicate = state.cartItems.map(item => {\n        console.log(item);\n      });\n      state.cartItems.push(action.payload);\n      toast.success(\"Product added to cart\", {\n        position: \"bottom-left\"\n      });\n    },\n\n    removeFromCart(state, action) {\n      toast.error(\"Product removed from cart\", {\n        position: \"bottom-left\"\n      });\n      return state.cartItems.filter(item => item._id !== action.payload._id);\n    },\n\n    clearCart(state, action) {\n      state.cartItems = [];\n      toast.error(\"Cart cleared\", {\n        position: \"bottom-left\"\n      });\n    }\n\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/home/nrk/Desktop/projeler/bookStore/client/src/redux/cartSlice.js"],"names":["createSlice","toast","initialState","cartItems","total","count","cartSlice","name","reducers","addToCart","state","action","isDuplicate","map","item","console","log","push","payload","success","position","removeFromCart","error","filter","_id","clearCart","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,KAAK,EAAE,CAFU;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,MAAMC,SAAS,GAAGN,WAAW,CAAC;AAC1BO,EAAAA,IAAI,EAAE,MADoB;AAE1BL,EAAAA,YAF0B;AAG1BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrB,YAAMC,WAAW,GAAGF,KAAK,CAACP,SAAN,CAAgBU,GAAhB,CAAqBC,IAAD,IAAU;AAC9CC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,OAFmB,CAApB;AAGAJ,MAAAA,KAAK,CAACP,SAAN,CAAgBc,IAAhB,CAAqBN,MAAM,CAACO,OAA5B;AACAjB,MAAAA,KAAK,CAACkB,OAAN,CAAc,uBAAd,EAAuC;AACnCC,QAAAA,QAAQ,EAAE;AADyB,OAAvC;AAGH,KATK;;AAUNC,IAAAA,cAAc,CAACX,KAAD,EAAQC,MAAR,EAAgB;AAC1BV,MAAAA,KAAK,CAACqB,KAAN,CAAY,2BAAZ,EAAyC;AACrCF,QAAAA,QAAQ,EAAE;AAD2B,OAAzC;AAGA,aAAOV,KAAK,CAACP,SAAN,CAAgBoB,MAAhB,CAAwBT,IAAD,IAAUA,IAAI,CAACU,GAAL,KAAab,MAAM,CAACO,OAAP,CAAeM,GAA7D,CAAP;AACH,KAfK;;AAgBNC,IAAAA,SAAS,CAACf,KAAD,EAAQC,MAAR,EAAgB;AACrBD,MAAAA,KAAK,CAACP,SAAN,GAAkB,EAAlB;AACAF,MAAAA,KAAK,CAACqB,KAAN,CAAY,cAAZ,EAA4B;AAAEF,QAAAA,QAAQ,EAAE;AAAZ,OAA5B;AACH;;AAnBK;AAHgB,CAAD,CAA7B;AA2BA,OAAO,MAAM;AAAEX,EAAAA,SAAF;AAAaY,EAAAA;AAAb,IAAgCf,SAAS,CAACoB,OAAhD;AAEP,eAAepB,SAAS,CAACqB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\n\n\nconst initialState = {\n    cartItems: [],\n    total: 0,\n    count: 0,\n}\n\nconst cartSlice = createSlice({\n    name: \"cart\",\n    initialState,\n    reducers: {\n        addToCart(state, action) {\n            const isDuplicate = state.cartItems.map((item) => {\n                console.log(item)\n            })\n            state.cartItems.push(action.payload)\n            toast.success(\"Product added to cart\", {\n                position: \"bottom-left\",\n            })\n        },\n        removeFromCart(state, action) {\n            toast.error(\"Product removed from cart\", {\n                position: \"bottom-left\",\n            });\n            return state.cartItems.filter((item) => item._id !== action.payload._id)\n        },\n        clearCart(state, action) {\n            state.cartItems = []\n            toast.error(\"Cart cleared\", { position: \"bottom-left\" });\n        }\n    }\n})\n\n\nexport const { addToCart, removeFromCart } = cartSlice.actions\n\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}