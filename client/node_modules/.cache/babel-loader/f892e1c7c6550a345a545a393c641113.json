{"ast":null,"code":"'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\n\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n  if (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n    return false;\n  }\n\n  return $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n  if (isStandardArguments(value)) {\n    return true;\n  }\n\n  return value !== null && typeof value === 'object' && typeof value.length === 'number' && value.length >= 0 && $toString(value) !== '[object Array]' && $toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = function () {\n  return isStandardArguments(arguments);\n}();\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;","map":{"version":3,"sources":["/home/nrk/node_modules/is-arguments/index.js"],"names":["hasToStringTag","require","callBound","$toString","isStandardArguments","isArguments","value","Symbol","toStringTag","isLegacyArguments","length","callee","supportsStandardArguments","arguments","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,uBAAD,CAAP,EAArB;;AACA,IAAIC,SAAS,GAAGD,OAAO,CAAC,qBAAD,CAAvB;;AAEA,IAAIE,SAAS,GAAGD,SAAS,CAAC,2BAAD,CAAzB;;AAEA,IAAIE,mBAAmB,GAAG,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACrD,MAAIN,cAAc,IAAIM,KAAlB,IAA2B,OAAOA,KAAP,KAAiB,QAA5C,IAAwDC,MAAM,CAACC,WAAP,IAAsBF,KAAlF,EAAyF;AACxF,WAAO,KAAP;AACA;;AACD,SAAOH,SAAS,CAACG,KAAD,CAAT,KAAqB,oBAA5B;AACA,CALD;;AAOA,IAAIG,iBAAiB,GAAG,SAASJ,WAAT,CAAqBC,KAArB,EAA4B;AACnD,MAAIF,mBAAmB,CAACE,KAAD,CAAvB,EAAgC;AAC/B,WAAO,IAAP;AACA;;AACD,SAAOA,KAAK,KAAK,IAAV,IACN,OAAOA,KAAP,KAAiB,QADX,IAEN,OAAOA,KAAK,CAACI,MAAb,KAAwB,QAFlB,IAGNJ,KAAK,CAACI,MAAN,IAAgB,CAHV,IAINP,SAAS,CAACG,KAAD,CAAT,KAAqB,gBAJf,IAKNH,SAAS,CAACG,KAAK,CAACK,MAAP,CAAT,KAA4B,mBAL7B;AAMA,CAVD;;AAYA,IAAIC,yBAAyB,GAAI,YAAY;AAC5C,SAAOR,mBAAmB,CAACS,SAAD,CAA1B;AACA,CAFgC,EAAjC;;AAIAT,mBAAmB,CAACK,iBAApB,GAAwCA,iBAAxC,C,CAA2D;;AAE3DK,MAAM,CAACC,OAAP,GAAiBH,yBAAyB,GAAGR,mBAAH,GAAyBK,iBAAnE","sourcesContent":["'use strict';\n\nvar hasToStringTag = require('has-tostringtag/shams')();\nvar callBound = require('call-bind/callBound');\n\nvar $toString = callBound('Object.prototype.toString');\n\nvar isStandardArguments = function isArguments(value) {\n\tif (hasToStringTag && value && typeof value === 'object' && Symbol.toStringTag in value) {\n\t\treturn false;\n\t}\n\treturn $toString(value) === '[object Arguments]';\n};\n\nvar isLegacyArguments = function isArguments(value) {\n\tif (isStandardArguments(value)) {\n\t\treturn true;\n\t}\n\treturn value !== null &&\n\t\ttypeof value === 'object' &&\n\t\ttypeof value.length === 'number' &&\n\t\tvalue.length >= 0 &&\n\t\t$toString(value) !== '[object Array]' &&\n\t\t$toString(value.callee) === '[object Function]';\n};\n\nvar supportsStandardArguments = (function () {\n\treturn isStandardArguments(arguments);\n}());\n\nisStandardArguments.isLegacyArguments = isLegacyArguments; // for tests\n\nmodule.exports = supportsStandardArguments ? isStandardArguments : isLegacyArguments;\n"]},"metadata":{},"sourceType":"script"}