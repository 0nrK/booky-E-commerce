{"ast":null,"code":"/*global module*/\nvar Buffer = require('safe-buffer').Buffer;\n\nvar DataStream = require('./data-stream');\n\nvar jwa = require('jwa');\n\nvar Stream = require('stream');\n\nvar toString = require('./tostring');\n\nvar util = require('util');\n\nvar JWS_REGEX = /^[a-zA-Z0-9\\-_]+?\\.[a-zA-Z0-9\\-_]+?\\.([a-zA-Z0-9\\-_]+)?$/;\n\nfunction isObject(thing) {\n  return Object.prototype.toString.call(thing) === '[object Object]';\n}\n\nfunction safeJsonParse(thing) {\n  if (isObject(thing)) return thing;\n\n  try {\n    return JSON.parse(thing);\n  } catch (e) {\n    return undefined;\n  }\n}\n\nfunction headerFromJWS(jwsSig) {\n  var encodedHeader = jwsSig.split('.', 1)[0];\n  return safeJsonParse(Buffer.from(encodedHeader, 'base64').toString('binary'));\n}\n\nfunction securedInputFromJWS(jwsSig) {\n  return jwsSig.split('.', 2).join('.');\n}\n\nfunction signatureFromJWS(jwsSig) {\n  return jwsSig.split('.')[2];\n}\n\nfunction payloadFromJWS(jwsSig, encoding) {\n  encoding = encoding || 'utf8';\n  var payload = jwsSig.split('.')[1];\n  return Buffer.from(payload, 'base64').toString(encoding);\n}\n\nfunction isValidJws(string) {\n  return JWS_REGEX.test(string) && !!headerFromJWS(string);\n}\n\nfunction jwsVerify(jwsSig, algorithm, secretOrKey) {\n  if (!algorithm) {\n    var err = new Error(\"Missing algorithm parameter for jws.verify\");\n    err.code = \"MISSING_ALGORITHM\";\n    throw err;\n  }\n\n  jwsSig = toString(jwsSig);\n  var signature = signatureFromJWS(jwsSig);\n  var securedInput = securedInputFromJWS(jwsSig);\n  var algo = jwa(algorithm);\n  return algo.verify(securedInput, signature, secretOrKey);\n}\n\nfunction jwsDecode(jwsSig, opts) {\n  opts = opts || {};\n  jwsSig = toString(jwsSig);\n  if (!isValidJws(jwsSig)) return null;\n  var header = headerFromJWS(jwsSig);\n  if (!header) return null;\n  var payload = payloadFromJWS(jwsSig);\n  if (header.typ === 'JWT' || opts.json) payload = JSON.parse(payload, opts.encoding);\n  return {\n    header: header,\n    payload: payload,\n    signature: signatureFromJWS(jwsSig)\n  };\n}\n\nfunction VerifyStream(opts) {\n  opts = opts || {};\n  var secretOrKey = opts.secret || opts.publicKey || opts.key;\n  var secretStream = new DataStream(secretOrKey);\n  this.readable = true;\n  this.algorithm = opts.algorithm;\n  this.encoding = opts.encoding;\n  this.secret = this.publicKey = this.key = secretStream;\n  this.signature = new DataStream(opts.signature);\n  this.secret.once('close', function () {\n    if (!this.signature.writable && this.readable) this.verify();\n  }.bind(this));\n  this.signature.once('close', function () {\n    if (!this.secret.writable && this.readable) this.verify();\n  }.bind(this));\n}\n\nutil.inherits(VerifyStream, Stream);\n\nVerifyStream.prototype.verify = function verify() {\n  try {\n    var valid = jwsVerify(this.signature.buffer, this.algorithm, this.key.buffer);\n    var obj = jwsDecode(this.signature.buffer, this.encoding);\n    this.emit('done', valid, obj);\n    this.emit('data', valid);\n    this.emit('end');\n    this.readable = false;\n    return valid;\n  } catch (e) {\n    this.readable = false;\n    this.emit('error', e);\n    this.emit('close');\n  }\n};\n\nVerifyStream.decode = jwsDecode;\nVerifyStream.isValid = isValidJws;\nVerifyStream.verify = jwsVerify;\nmodule.exports = VerifyStream;","map":{"version":3,"sources":["/home/nrk/Desktop/projeler/bookStore/node_modules/jws/lib/verify-stream.js"],"names":["Buffer","require","DataStream","jwa","Stream","toString","util","JWS_REGEX","isObject","thing","Object","prototype","call","safeJsonParse","JSON","parse","e","undefined","headerFromJWS","jwsSig","encodedHeader","split","from","securedInputFromJWS","join","signatureFromJWS","payloadFromJWS","encoding","payload","isValidJws","string","test","jwsVerify","algorithm","secretOrKey","err","Error","code","signature","securedInput","algo","verify","jwsDecode","opts","header","typ","json","VerifyStream","secret","publicKey","key","secretStream","readable","once","writable","bind","inherits","valid","buffer","obj","emit","decode","isValid","module","exports"],"mappings":"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","sourcesContent":["/*global module*/\nvar Buffer = require('safe-buffer').Buffer;\nvar DataStream = require('./data-stream');\nvar jwa = require('jwa');\nvar Stream = require('stream');\nvar toString = require('./tostring');\nvar util = require('util');\nvar JWS_REGEX = /^[a-zA-Z0-9\\-_]+?\\.[a-zA-Z0-9\\-_]+?\\.([a-zA-Z0-9\\-_]+)?$/;\n\nfunction isObject(thing) {\n  return Object.prototype.toString.call(thing) === '[object Object]';\n}\n\nfunction safeJsonParse(thing) {\n  if (isObject(thing))\n    return thing;\n  try { return JSON.parse(thing); }\n  catch (e) { return undefined; }\n}\n\nfunction headerFromJWS(jwsSig) {\n  var encodedHeader = jwsSig.split('.', 1)[0];\n  return safeJsonParse(Buffer.from(encodedHeader, 'base64').toString('binary'));\n}\n\nfunction securedInputFromJWS(jwsSig) {\n  return jwsSig.split('.', 2).join('.');\n}\n\nfunction signatureFromJWS(jwsSig) {\n  return jwsSig.split('.')[2];\n}\n\nfunction payloadFromJWS(jwsSig, encoding) {\n  encoding = encoding || 'utf8';\n  var payload = jwsSig.split('.')[1];\n  return Buffer.from(payload, 'base64').toString(encoding);\n}\n\nfunction isValidJws(string) {\n  return JWS_REGEX.test(string) && !!headerFromJWS(string);\n}\n\nfunction jwsVerify(jwsSig, algorithm, secretOrKey) {\n  if (!algorithm) {\n    var err = new Error(\"Missing algorithm parameter for jws.verify\");\n    err.code = \"MISSING_ALGORITHM\";\n    throw err;\n  }\n  jwsSig = toString(jwsSig);\n  var signature = signatureFromJWS(jwsSig);\n  var securedInput = securedInputFromJWS(jwsSig);\n  var algo = jwa(algorithm);\n  return algo.verify(securedInput, signature, secretOrKey);\n}\n\nfunction jwsDecode(jwsSig, opts) {\n  opts = opts || {};\n  jwsSig = toString(jwsSig);\n\n  if (!isValidJws(jwsSig))\n    return null;\n\n  var header = headerFromJWS(jwsSig);\n\n  if (!header)\n    return null;\n\n  var payload = payloadFromJWS(jwsSig);\n  if (header.typ === 'JWT' || opts.json)\n    payload = JSON.parse(payload, opts.encoding);\n\n  return {\n    header: header,\n    payload: payload,\n    signature: signatureFromJWS(jwsSig)\n  };\n}\n\nfunction VerifyStream(opts) {\n  opts = opts || {};\n  var secretOrKey = opts.secret||opts.publicKey||opts.key;\n  var secretStream = new DataStream(secretOrKey);\n  this.readable = true;\n  this.algorithm = opts.algorithm;\n  this.encoding = opts.encoding;\n  this.secret = this.publicKey = this.key = secretStream;\n  this.signature = new DataStream(opts.signature);\n  this.secret.once('close', function () {\n    if (!this.signature.writable && this.readable)\n      this.verify();\n  }.bind(this));\n\n  this.signature.once('close', function () {\n    if (!this.secret.writable && this.readable)\n      this.verify();\n  }.bind(this));\n}\nutil.inherits(VerifyStream, Stream);\nVerifyStream.prototype.verify = function verify() {\n  try {\n    var valid = jwsVerify(this.signature.buffer, this.algorithm, this.key.buffer);\n    var obj = jwsDecode(this.signature.buffer, this.encoding);\n    this.emit('done', valid, obj);\n    this.emit('data', valid);\n    this.emit('end');\n    this.readable = false;\n    return valid;\n  } catch (e) {\n    this.readable = false;\n    this.emit('error', e);\n    this.emit('close');\n  }\n};\n\nVerifyStream.decode = jwsDecode;\nVerifyStream.isValid = isValidJws;\nVerifyStream.verify = jwsVerify;\n\nmodule.exports = VerifyStream;\n"]},"metadata":{},"sourceType":"script"}