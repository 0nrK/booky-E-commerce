{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isVAT;\nexports.vatMatchers = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar vatMatchers = {\n  GB: /^GB((\\d{3} \\d{4} ([0-8][0-9]|9[0-6]))|(\\d{9} \\d{3})|(((GD[0-4])|(HA[5-9]))[0-9]{2}))$/,\n  IT: /^(IT)?[0-9]{11}$/,\n  NL: /^(NL)?[0-9]{9}B[0-9]{2}$/\n};\nexports.vatMatchers = vatMatchers;\n\nfunction isVAT(str, countryCode) {\n  (0, _assertString.default)(str);\n  (0, _assertString.default)(countryCode);\n\n  if (countryCode in vatMatchers) {\n    return vatMatchers[countryCode].test(str);\n  }\n\n  throw new Error(\"Invalid country code: '\".concat(countryCode, \"'\"));\n}","map":{"version":3,"sources":["/home/nrk/Desktop/projeler/bookStore/client/node_modules/validator/lib/isVAT.js"],"names":["Object","defineProperty","exports","value","default","isVAT","vatMatchers","_assertString","_interopRequireDefault","require","obj","__esModule","GB","IT","NL","str","countryCode","test","Error","concat"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,KAAlB;AACAH,OAAO,CAACI,WAAR,GAAsB,KAAK,CAA3B;;AAEA,IAAIC,aAAa,GAAGC,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA1C;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEN,IAAAA,OAAO,EAAEM;AAAX,GAArC;AAAwD;;AAE/F,IAAIJ,WAAW,GAAG;AAChBM,EAAAA,EAAE,EAAE,uFADY;AAEhBC,EAAAA,EAAE,EAAE,kBAFY;AAGhBC,EAAAA,EAAE,EAAE;AAHY,CAAlB;AAKAZ,OAAO,CAACI,WAAR,GAAsBA,WAAtB;;AAEA,SAASD,KAAT,CAAeU,GAAf,EAAoBC,WAApB,EAAiC;AAC/B,GAAC,GAAGT,aAAa,CAACH,OAAlB,EAA2BW,GAA3B;AACA,GAAC,GAAGR,aAAa,CAACH,OAAlB,EAA2BY,WAA3B;;AAEA,MAAIA,WAAW,IAAIV,WAAnB,EAAgC;AAC9B,WAAOA,WAAW,CAACU,WAAD,CAAX,CAAyBC,IAAzB,CAA8BF,GAA9B,CAAP;AACD;;AAED,QAAM,IAAIG,KAAJ,CAAU,0BAA0BC,MAA1B,CAAiCH,WAAjC,EAA8C,GAA9C,CAAV,CAAN;AACD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isVAT;\nexports.vatMatchers = void 0;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar vatMatchers = {\n  GB: /^GB((\\d{3} \\d{4} ([0-8][0-9]|9[0-6]))|(\\d{9} \\d{3})|(((GD[0-4])|(HA[5-9]))[0-9]{2}))$/,\n  IT: /^(IT)?[0-9]{11}$/,\n  NL: /^(NL)?[0-9]{9}B[0-9]{2}$/\n};\nexports.vatMatchers = vatMatchers;\n\nfunction isVAT(str, countryCode) {\n  (0, _assertString.default)(str);\n  (0, _assertString.default)(countryCode);\n\n  if (countryCode in vatMatchers) {\n    return vatMatchers[countryCode].test(str);\n  }\n\n  throw new Error(\"Invalid country code: '\".concat(countryCode, \"'\"));\n}"]},"metadata":{},"sourceType":"script"}