{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:5000/auth/\";\n\nconst register = (username, password) => {\n  return axios.post(API_URL + \"register\", {\n    username,\n    password\n  });\n};\n\nconst login = (username, password) => {\n  return axios.post(API_URL + \"login\", {\n    username,\n    password\n  }).then(res => {\n    if (res.data.accessToken) {\n      localStorage.setItem(\"user\", JSON.stringfy(res.data));\n    }\n\n    return res.data;\n  });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nconst authService = {\n  register,\n  login,\n  logout\n};\nexport default authService;","map":{"version":3,"sources":["/home/nrk/Desktop/projeler/bookStore/client/src/services/authService.js"],"names":["axios","API_URL","register","username","password","post","login","then","res","data","accessToken","localStorage","setItem","JSON","stringfy","logout","removeItem","authService"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,6BAAhB;;AAGA,MAAMC,QAAQ,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;AACrC,SAAOJ,KAAK,CAACK,IAAN,CAAWJ,OAAO,GAAG,UAArB,EAAiC;AAAEE,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAjC,CAAP;AACH,CAFD;;AAGA,MAAME,KAAK,GAAG,CAACH,QAAD,EAAWC,QAAX,KAAwB;AAClC,SAAOJ,KAAK,CAACK,IAAN,CAAWJ,OAAO,GAAG,OAArB,EAA8B;AAAEE,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAA9B,EACFG,IADE,CACIC,GAAD,IAAS;AACX,QAAIA,GAAG,CAACC,IAAJ,CAASC,WAAb,EAA0B;AACtBC,MAAAA,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6BC,IAAI,CAACC,QAAL,CAAcN,GAAG,CAACC,IAAlB,CAA7B;AACH;;AACD,WAAOD,GAAG,CAACC,IAAX;AACH,GANE,CAAP;AAOH,CARD;;AAUA,MAAMM,MAAM,GAAG,MAAM;AACjBJ,EAAAA,YAAY,CAACK,UAAb,CAAwB,MAAxB;AACH,CAFD;;AAIA,MAAMC,WAAW,GAAG;AAAEf,EAAAA,QAAF;AAAYI,EAAAA,KAAZ;AAAmBS,EAAAA;AAAnB,CAApB;AAEA,eAAeE,WAAf","sourcesContent":["import axios from \"axios\"\n\nconst API_URL = \"http://localhost:5000/auth/\"\n\n\nconst register = (username, password) => {\n    return axios.post(API_URL + \"register\", { username, password })\n}\nconst login = (username, password) => {\n    return axios.post(API_URL + \"login\", { username, password })\n        .then((res) => {\n            if (res.data.accessToken) {\n                localStorage.setItem(\"user\", JSON.stringfy(res.data))\n            }\n            return res.data\n        })\n}\n\nconst logout = () => {\n    localStorage.removeItem(\"user\")\n}\n\nconst authService = { register, login, logout }\n\nexport default authService"]},"metadata":{},"sourceType":"module"}