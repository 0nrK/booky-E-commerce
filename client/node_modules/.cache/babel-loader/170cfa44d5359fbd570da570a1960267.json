{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isInt;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/;\nvar intLeadingZeroes = /^[-+]?[0-9]+$/;\n\nfunction isInt(str, options) {\n  (0, _assertString.default)(str);\n  options = options || {}; // Get the regex to use for testing, based on whether\n  // leading zeroes are allowed or not.\n\n  var regex = options.hasOwnProperty('allow_leading_zeroes') && !options.allow_leading_zeroes ? int : intLeadingZeroes; // Check min/max/lt/gt\n\n  var minCheckPassed = !options.hasOwnProperty('min') || str >= options.min;\n  var maxCheckPassed = !options.hasOwnProperty('max') || str <= options.max;\n  var ltCheckPassed = !options.hasOwnProperty('lt') || str < options.lt;\n  var gtCheckPassed = !options.hasOwnProperty('gt') || str > options.gt;\n  return regex.test(str) && minCheckPassed && maxCheckPassed && ltCheckPassed && gtCheckPassed;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"sources":["/home/nrk/Desktop/projeler/bookStore/client/node_modules/validator/lib/isInt.js"],"names":["Object","defineProperty","exports","value","default","isInt","_assertString","_interopRequireDefault","require","obj","__esModule","int","intLeadingZeroes","str","options","regex","hasOwnProperty","allow_leading_zeroes","minCheckPassed","min","maxCheckPassed","max","ltCheckPassed","lt","gtCheckPassed","gt","test","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,KAAlB;;AAEA,IAAIC,aAAa,GAAGC,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA1C;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD;;AAE/F,IAAIE,GAAG,GAAG,8BAAV;AACA,IAAIC,gBAAgB,GAAG,eAAvB;;AAEA,SAASP,KAAT,CAAeQ,GAAf,EAAoBC,OAApB,EAA6B;AAC3B,GAAC,GAAGR,aAAa,CAACF,OAAlB,EAA2BS,GAA3B;AACAC,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB,CAF2B,CAEF;AACzB;;AAEA,MAAIC,KAAK,GAAGD,OAAO,CAACE,cAAR,CAAuB,sBAAvB,KAAkD,CAACF,OAAO,CAACG,oBAA3D,GAAkFN,GAAlF,GAAwFC,gBAApG,CAL2B,CAK2F;;AAEtH,MAAIM,cAAc,GAAG,CAACJ,OAAO,CAACE,cAAR,CAAuB,KAAvB,CAAD,IAAkCH,GAAG,IAAIC,OAAO,CAACK,GAAtE;AACA,MAAIC,cAAc,GAAG,CAACN,OAAO,CAACE,cAAR,CAAuB,KAAvB,CAAD,IAAkCH,GAAG,IAAIC,OAAO,CAACO,GAAtE;AACA,MAAIC,aAAa,GAAG,CAACR,OAAO,CAACE,cAAR,CAAuB,IAAvB,CAAD,IAAiCH,GAAG,GAAGC,OAAO,CAACS,EAAnE;AACA,MAAIC,aAAa,GAAG,CAACV,OAAO,CAACE,cAAR,CAAuB,IAAvB,CAAD,IAAiCH,GAAG,GAAGC,OAAO,CAACW,EAAnE;AACA,SAAOV,KAAK,CAACW,IAAN,CAAWb,GAAX,KAAmBK,cAAnB,IAAqCE,cAArC,IAAuDE,aAAvD,IAAwEE,aAA/E;AACD;;AAEDG,MAAM,CAACzB,OAAP,GAAiBA,OAAO,CAACE,OAAzB;AACAuB,MAAM,CAACzB,OAAP,CAAeE,OAAf,GAAyBF,OAAO,CAACE,OAAjC","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isInt;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar int = /^(?:[-+]?(?:0|[1-9][0-9]*))$/;\nvar intLeadingZeroes = /^[-+]?[0-9]+$/;\n\nfunction isInt(str, options) {\n  (0, _assertString.default)(str);\n  options = options || {}; // Get the regex to use for testing, based on whether\n  // leading zeroes are allowed or not.\n\n  var regex = options.hasOwnProperty('allow_leading_zeroes') && !options.allow_leading_zeroes ? int : intLeadingZeroes; // Check min/max/lt/gt\n\n  var minCheckPassed = !options.hasOwnProperty('min') || str >= options.min;\n  var maxCheckPassed = !options.hasOwnProperty('max') || str <= options.max;\n  var ltCheckPassed = !options.hasOwnProperty('lt') || str < options.lt;\n  var gtCheckPassed = !options.hasOwnProperty('gt') || str > options.gt;\n  return regex.test(str) && minCheckPassed && maxCheckPassed && ltCheckPassed && gtCheckPassed;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"]},"metadata":{},"sourceType":"script"}