{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDecimal;\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _includes = _interopRequireDefault(require(\"./util/includes\"));\n\nvar _alpha = require(\"./alpha\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction decimalRegExp(options) {\n  var regExp = new RegExp(\"^[-+]?([0-9]+)?(\\\\\".concat(_alpha.decimal[options.locale], \"[0-9]{\").concat(options.decimal_digits, \"})\").concat(options.force_decimal ? '' : '?', \"$\"));\n  return regExp;\n}\n\nvar default_decimal_options = {\n  force_decimal: false,\n  decimal_digits: '1,',\n  locale: 'en-US'\n};\nvar blacklist = ['', '-', '+'];\n\nfunction isDecimal(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_decimal_options);\n\n  if (options.locale in _alpha.decimal) {\n    return !(0, _includes.default)(blacklist, str.replace(/ /g, '')) && decimalRegExp(options).test(str);\n  }\n\n  throw new Error(\"Invalid locale '\".concat(options.locale, \"'\"));\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"sources":["/home/nrk/Desktop/projeler/bookStore/client/node_modules/validator/lib/isDecimal.js"],"names":["Object","defineProperty","exports","value","default","isDecimal","_merge","_interopRequireDefault","require","_assertString","_includes","_alpha","obj","__esModule","decimalRegExp","options","regExp","RegExp","concat","decimal","locale","decimal_digits","force_decimal","default_decimal_options","blacklist","str","replace","test","Error","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,SAAlB;;AAEA,IAAIC,MAAM,GAAGC,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAAnC;;AAEA,IAAIC,aAAa,GAAGF,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA1C;;AAEA,IAAIE,SAAS,GAAGH,sBAAsB,CAACC,OAAO,CAAC,iBAAD,CAAR,CAAtC;;AAEA,IAAIG,MAAM,GAAGH,OAAO,CAAC,SAAD,CAApB;;AAEA,SAASD,sBAAT,CAAgCK,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAER,IAAAA,OAAO,EAAEQ;AAAX,GAArC;AAAwD;;AAE/F,SAASE,aAAT,CAAuBC,OAAvB,EAAgC;AAC9B,MAAIC,MAAM,GAAG,IAAIC,MAAJ,CAAW,qBAAqBC,MAArB,CAA4BP,MAAM,CAACQ,OAAP,CAAeJ,OAAO,CAACK,MAAvB,CAA5B,EAA4D,QAA5D,EAAsEF,MAAtE,CAA6EH,OAAO,CAACM,cAArF,EAAqG,IAArG,EAA2GH,MAA3G,CAAkHH,OAAO,CAACO,aAAR,GAAwB,EAAxB,GAA6B,GAA/I,EAAoJ,GAApJ,CAAX,CAAb;AACA,SAAON,MAAP;AACD;;AAED,IAAIO,uBAAuB,GAAG;AAC5BD,EAAAA,aAAa,EAAE,KADa;AAE5BD,EAAAA,cAAc,EAAE,IAFY;AAG5BD,EAAAA,MAAM,EAAE;AAHoB,CAA9B;AAKA,IAAII,SAAS,GAAG,CAAC,EAAD,EAAK,GAAL,EAAU,GAAV,CAAhB;;AAEA,SAASnB,SAAT,CAAmBoB,GAAnB,EAAwBV,OAAxB,EAAiC;AAC/B,GAAC,GAAGN,aAAa,CAACL,OAAlB,EAA2BqB,GAA3B;AACAV,EAAAA,OAAO,GAAG,CAAC,GAAGT,MAAM,CAACF,OAAX,EAAoBW,OAApB,EAA6BQ,uBAA7B,CAAV;;AAEA,MAAIR,OAAO,CAACK,MAAR,IAAkBT,MAAM,CAACQ,OAA7B,EAAsC;AACpC,WAAO,CAAC,CAAC,GAAGT,SAAS,CAACN,OAAd,EAAuBoB,SAAvB,EAAkCC,GAAG,CAACC,OAAJ,CAAY,IAAZ,EAAkB,EAAlB,CAAlC,CAAD,IAA6DZ,aAAa,CAACC,OAAD,CAAb,CAAuBY,IAAvB,CAA4BF,GAA5B,CAApE;AACD;;AAED,QAAM,IAAIG,KAAJ,CAAU,mBAAmBV,MAAnB,CAA0BH,OAAO,CAACK,MAAlC,EAA0C,GAA1C,CAAV,CAAN;AACD;;AAEDS,MAAM,CAAC3B,OAAP,GAAiBA,OAAO,CAACE,OAAzB;AACAyB,MAAM,CAAC3B,OAAP,CAAeE,OAAf,GAAyBF,OAAO,CAACE,OAAjC","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isDecimal;\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _includes = _interopRequireDefault(require(\"./util/includes\"));\n\nvar _alpha = require(\"./alpha\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction decimalRegExp(options) {\n  var regExp = new RegExp(\"^[-+]?([0-9]+)?(\\\\\".concat(_alpha.decimal[options.locale], \"[0-9]{\").concat(options.decimal_digits, \"})\").concat(options.force_decimal ? '' : '?', \"$\"));\n  return regExp;\n}\n\nvar default_decimal_options = {\n  force_decimal: false,\n  decimal_digits: '1,',\n  locale: 'en-US'\n};\nvar blacklist = ['', '-', '+'];\n\nfunction isDecimal(str, options) {\n  (0, _assertString.default)(str);\n  options = (0, _merge.default)(options, default_decimal_options);\n\n  if (options.locale in _alpha.decimal) {\n    return !(0, _includes.default)(blacklist, str.replace(/ /g, '')) && decimalRegExp(options).test(str);\n  }\n\n  throw new Error(\"Invalid locale '\".concat(options.locale, \"'\"));\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"]},"metadata":{},"sourceType":"script"}