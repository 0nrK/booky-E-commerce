{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isFQDN = _interopRequireDefault(require(\"./isFQDN\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n/*\noptions for isURL method\n\nrequire_protocol - if set as true isURL will return false if protocol is not present in the URL\nrequire_valid_protocol - isURL will check if the URL's protocol is present in the protocols option\nprotocols - valid protocols can be modified with this option\nrequire_host - if set as false isURL will not check if host is present in the URL\nrequire_port - if set as true isURL will check if port is present in the URL\nallow_protocol_relative_urls - if set as true protocol relative URLs will be allowed\nvalidate_length - if set as false isURL will skip string length validation (IE maximum is 2083)\n\n*/\n\n\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_port: false,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false,\n  allow_fragments: true,\n  allow_query_components: true,\n  validate_length: true\n};\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isURL(url, options) {\n  (0, _assertString.default)(url);\n\n  if (!url || /[\\s<>]/.test(url)) {\n    return false;\n  }\n\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n\n  options = (0, _merge.default)(options, default_url_options);\n\n  if (options.validate_length && url.length >= 2083) {\n    return false;\n  }\n\n  if (!options.allow_fragments && url.includes('#')) {\n    return false;\n  }\n\n  if (!options.allow_query_components && (url.includes('?') || url.includes('&'))) {\n    return false;\n  }\n\n  var protocol, auth, host, hostname, port, port_str, split, ipv6;\n  split = url.split('#');\n  url = split.shift();\n  split = url.split('?');\n  url = split.shift();\n  split = url.split('://');\n\n  if (split.length > 1) {\n    protocol = split.shift().toLowerCase();\n\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (url.substr(0, 2) === '//') {\n    if (!options.allow_protocol_relative_urls) {\n      return false;\n    }\n\n    split[0] = url.substr(2);\n  }\n\n  url = split.join('://');\n\n  if (url === '') {\n    return false;\n  }\n\n  split = url.split('/');\n  url = split.shift();\n\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n\n  split = url.split('@');\n\n  if (split.length > 1) {\n    if (options.disallow_auth) {\n      return false;\n    }\n\n    if (split[0] === '') {\n      return false;\n    }\n\n    auth = split.shift();\n\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n\n    var _auth$split = auth.split(':'),\n        _auth$split2 = _slicedToArray(_auth$split, 2),\n        user = _auth$split2[0],\n        password = _auth$split2[1];\n\n    if (user === '' && password === '') {\n      return false;\n    }\n  }\n\n  hostname = split.join('@');\n  port_str = null;\n  ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n\n  if (port_str !== null && port_str.length > 0) {\n    port = parseInt(port_str, 10);\n\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  } else if (options.require_port) {\n    return false;\n  }\n\n  if (options.host_whitelist) {\n    return checkHost(host, options.host_whitelist);\n  }\n\n  if (!(0, _isIP.default)(host) && !(0, _isFQDN.default)(host, options) && (!ipv6 || !(0, _isIP.default)(ipv6, 6))) {\n    return false;\n  }\n\n  host = host || ipv6;\n\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"sources":["/home/nrk/Desktop/projeler/bookStore/client/node_modules/validator/lib/isURL.js"],"names":["Object","defineProperty","exports","value","default","isURL","_assertString","_interopRequireDefault","require","_isFQDN","_isIP","_merge","obj","__esModule","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","err","isArray","default_url_options","protocols","require_tld","require_protocol","require_host","require_port","require_valid_protocol","allow_underscores","allow_trailing_dot","allow_protocol_relative_urls","allow_fragments","allow_query_components","validate_length","wrapped_ipv6","isRegExp","checkHost","host","matches","match","url","options","indexOf","includes","protocol","auth","hostname","port","port_str","split","ipv6","shift","toLowerCase","substr","join","disallow_auth","_auth$split","_auth$split2","user","password","ipv6_match","parseInt","host_whitelist","host_blacklist","module"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isURL;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nvar _isFQDN = _interopRequireDefault(require(\"./isFQDN\"));\n\nvar _isIP = _interopRequireDefault(require(\"./isIP\"));\n\nvar _merge = _interopRequireDefault(require(\"./util/merge\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n/*\noptions for isURL method\n\nrequire_protocol - if set as true isURL will return false if protocol is not present in the URL\nrequire_valid_protocol - isURL will check if the URL's protocol is present in the protocols option\nprotocols - valid protocols can be modified with this option\nrequire_host - if set as false isURL will not check if host is present in the URL\nrequire_port - if set as true isURL will check if port is present in the URL\nallow_protocol_relative_urls - if set as true protocol relative URLs will be allowed\nvalidate_length - if set as false isURL will skip string length validation (IE maximum is 2083)\n\n*/\nvar default_url_options = {\n  protocols: ['http', 'https', 'ftp'],\n  require_tld: true,\n  require_protocol: false,\n  require_host: true,\n  require_port: false,\n  require_valid_protocol: true,\n  allow_underscores: false,\n  allow_trailing_dot: false,\n  allow_protocol_relative_urls: false,\n  allow_fragments: true,\n  allow_query_components: true,\n  validate_length: true\n};\nvar wrapped_ipv6 = /^\\[([^\\]]+)\\](?::([0-9]+))?$/;\n\nfunction isRegExp(obj) {\n  return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\n\nfunction checkHost(host, matches) {\n  for (var i = 0; i < matches.length; i++) {\n    var match = matches[i];\n\n    if (host === match || isRegExp(match) && match.test(host)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction isURL(url, options) {\n  (0, _assertString.default)(url);\n\n  if (!url || /[\\s<>]/.test(url)) {\n    return false;\n  }\n\n  if (url.indexOf('mailto:') === 0) {\n    return false;\n  }\n\n  options = (0, _merge.default)(options, default_url_options);\n\n  if (options.validate_length && url.length >= 2083) {\n    return false;\n  }\n\n  if (!options.allow_fragments && url.includes('#')) {\n    return false;\n  }\n\n  if (!options.allow_query_components && (url.includes('?') || url.includes('&'))) {\n    return false;\n  }\n\n  var protocol, auth, host, hostname, port, port_str, split, ipv6;\n  split = url.split('#');\n  url = split.shift();\n  split = url.split('?');\n  url = split.shift();\n  split = url.split('://');\n\n  if (split.length > 1) {\n    protocol = split.shift().toLowerCase();\n\n    if (options.require_valid_protocol && options.protocols.indexOf(protocol) === -1) {\n      return false;\n    }\n  } else if (options.require_protocol) {\n    return false;\n  } else if (url.substr(0, 2) === '//') {\n    if (!options.allow_protocol_relative_urls) {\n      return false;\n    }\n\n    split[0] = url.substr(2);\n  }\n\n  url = split.join('://');\n\n  if (url === '') {\n    return false;\n  }\n\n  split = url.split('/');\n  url = split.shift();\n\n  if (url === '' && !options.require_host) {\n    return true;\n  }\n\n  split = url.split('@');\n\n  if (split.length > 1) {\n    if (options.disallow_auth) {\n      return false;\n    }\n\n    if (split[0] === '') {\n      return false;\n    }\n\n    auth = split.shift();\n\n    if (auth.indexOf(':') >= 0 && auth.split(':').length > 2) {\n      return false;\n    }\n\n    var _auth$split = auth.split(':'),\n        _auth$split2 = _slicedToArray(_auth$split, 2),\n        user = _auth$split2[0],\n        password = _auth$split2[1];\n\n    if (user === '' && password === '') {\n      return false;\n    }\n  }\n\n  hostname = split.join('@');\n  port_str = null;\n  ipv6 = null;\n  var ipv6_match = hostname.match(wrapped_ipv6);\n\n  if (ipv6_match) {\n    host = '';\n    ipv6 = ipv6_match[1];\n    port_str = ipv6_match[2] || null;\n  } else {\n    split = hostname.split(':');\n    host = split.shift();\n\n    if (split.length) {\n      port_str = split.join(':');\n    }\n  }\n\n  if (port_str !== null && port_str.length > 0) {\n    port = parseInt(port_str, 10);\n\n    if (!/^[0-9]+$/.test(port_str) || port <= 0 || port > 65535) {\n      return false;\n    }\n  } else if (options.require_port) {\n    return false;\n  }\n\n  if (options.host_whitelist) {\n    return checkHost(host, options.host_whitelist);\n  }\n\n  if (!(0, _isIP.default)(host) && !(0, _isFQDN.default)(host, options) && (!ipv6 || !(0, _isIP.default)(ipv6, 6))) {\n    return false;\n  }\n\n  host = host || ipv6;\n\n  if (options.host_blacklist && checkHost(host, options.host_blacklist)) {\n    return false;\n  }\n\n  return true;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"]},"metadata":{},"sourceType":"script"}