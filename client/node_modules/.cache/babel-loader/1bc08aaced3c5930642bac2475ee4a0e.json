{"ast":null,"code":"import React__default, { isValidElement, useRef, useLayoutEffect, useEffect, useReducer, useState, cloneElement, createElement } from 'react';\nimport cx from 'clsx';\nimport { render } from 'react-dom';\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction isNum(v) {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\n\nfunction isStr(v) {\n  return typeof v === 'string';\n}\n\nfunction isFn(v) {\n  return typeof v === 'function';\n}\n\nfunction parseClassName(v) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nfunction isToastIdValid(toastId) {\n  return toastId === 0 || toastId;\n}\n\nfunction getAutoCloseDelay(toastAutoClose, containerAutoClose) {\n  return toastAutoClose === false || isNum(toastAutoClose) && toastAutoClose > 0 ? toastAutoClose : containerAutoClose;\n}\n\nvar canUseDom = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nfunction canBeRendered(content) {\n  return isValidElement(content) || isStr(content) || isFn(content) || isNum(content);\n}\n\nvar POSITION = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\nvar TYPE = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n/**\r\n * Used to collapse toast after exit animation\r\n */\n\nfunction collapseToast(node, done, duration\n/* COLLAPSE_DURATION */\n) {\n  if (duration === void 0) {\n    duration = 300;\n  }\n\n  var scrollHeight = node.scrollHeight,\n      style = node.style;\n  requestAnimationFrame(function () {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = \"all \" + duration + \"ms\";\n    requestAnimationFrame(function () {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration);\n    });\n  });\n}\n/**\r\n * Css animation that just work.\r\n * You could use animate.css for instance\r\n *\r\n *\r\n * ```\r\n * cssTransition({\r\n *   enter: \"animate__animated animate__bounceIn\",\r\n *   exit: \"animate__animated animate__bounceOut\"\r\n * })\r\n * ```\r\n *\r\n */\n\n\nfunction cssTransition(_ref) {\n  var enter = _ref.enter,\n      exit = _ref.exit,\n      _ref$appendPosition = _ref.appendPosition,\n      appendPosition = _ref$appendPosition === void 0 ? false : _ref$appendPosition,\n      _ref$collapse = _ref.collapse,\n      collapse = _ref$collapse === void 0 ? true : _ref$collapse,\n      _ref$collapseDuration = _ref.collapseDuration,\n      collapseDuration = _ref$collapseDuration === void 0 ? 300 : _ref$collapseDuration;\n  return function ToastTransition(_ref2) {\n    var children = _ref2.children,\n        position = _ref2.position,\n        preventExitTransition = _ref2.preventExitTransition,\n        done = _ref2.done,\n        nodeRef = _ref2.nodeRef,\n        isIn = _ref2.isIn;\n    var enterClassName = appendPosition ? enter + \"--\" + position : enter;\n    var exitClassName = appendPosition ? exit + \"--\" + position : exit;\n    var baseClassName = useRef();\n    var animationStep = useRef(0\n    /* Enter */\n    );\n    useLayoutEffect(function () {\n      onEnter();\n    }, []);\n    useEffect(function () {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      var node = nodeRef.current;\n      baseClassName.current = node.className;\n      node.className += \" \" + enterClassName;\n      node.addEventListener('animationend', onEntered);\n    }\n\n    function onEntered(e) {\n      if (e.target !== nodeRef.current) return;\n      var node = nodeRef.current;\n      node.dispatchEvent(new Event(\"d\"\n      /* ENTRANCE_ANIMATION_END */\n      ));\n      node.removeEventListener('animationend', onEntered);\n\n      if (animationStep.current === 0\n      /* Enter */\n      ) {\n        node.className = baseClassName.current;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = 1\n      /* Exit */\n      ;\n      var node = nodeRef.current;\n      node.className += \" \" + exitClassName;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      var node = nodeRef.current;\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return React__default.createElement(React__default.Fragment, null, children);\n  };\n}\n\nvar eventManager = {\n  list: /*#__PURE__*/new Map(),\n  emitQueue: /*#__PURE__*/new Map(),\n  on: function on(event, callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event).push(callback);\n    return this;\n  },\n  off: function off(event, callback) {\n    if (callback) {\n      var cb = this.list.get(event).filter(function (cb) {\n        return cb !== callback;\n      });\n      this.list.set(event, cb);\n      return this;\n    }\n\n    this.list[\"delete\"](event);\n    return this;\n  },\n  cancelEmit: function cancelEmit(event) {\n    var timers = this.emitQueue.get(event);\n\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue[\"delete\"](event);\n    }\n\n    return this;\n  },\n\n  /**\r\n   * Enqueue the event at the end of the call stack\r\n   * Doing so let the user call toast as follow:\r\n   * toast('1')\r\n   * toast('2')\r\n   * toast('3')\r\n   * Without setTimemout the code above will not work\r\n   */\n  emit: function emit(event) {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    this.list.has(event) && this.list.get(event).forEach(function (callback) {\n      var timer = setTimeout(function () {\n        // @ts-ignore\n        callback.apply(void 0, args);\n      }, 0);\n      _this.emitQueue.has(event) || _this.emitQueue.set(event, []);\n\n      _this.emitQueue.get(event).push(timer);\n    });\n  }\n};\nvar _excluded = [\"delay\", \"staleId\"];\n\nfunction useToastContainer(props) {\n  var _useReducer = useReducer(function (x) {\n    return x + 1;\n  }, 0),\n      forceUpdate = _useReducer[1];\n\n  var _useState = useState([]),\n      toastIds = _useState[0],\n      setToastIds = _useState[1];\n\n  var containerRef = useRef(null);\n  var toastToRender = useRef(new Map()).current;\n\n  var isToastActive = function isToastActive(id) {\n    return toastIds.indexOf(id) !== -1;\n  };\n\n  var instance = useRef({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props: props,\n    containerId: null,\n    isToastActive: isToastActive,\n    getToast: function getToast(id) {\n      return toastToRender.get(id);\n    }\n  }).current;\n  useEffect(function () {\n    instance.containerId = props.containerId;\n    eventManager.cancelEmit(3\n    /* WillUnmount */\n    ).on(0\n    /* Show */\n    , buildToast).on(1\n    /* Clear */\n    , function (toastId) {\n      return containerRef.current && removeToast(toastId);\n    }).on(5\n    /* ClearWaitingQueue */\n    , clearWaitingQueue).emit(2\n    /* DidMount */\n    , instance);\n    return function () {\n      return eventManager.emit(3\n      /* WillUnmount */\n      , instance);\n    };\n  }, []);\n  useEffect(function () {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n    eventManager.emit(4\n    /* Change */\n    , toastIds.length, props.containerId);\n  }, [toastIds]);\n  useEffect(function () {\n    instance.props = props;\n  });\n\n  function clearWaitingQueue(_ref) {\n    var containerId = _ref.containerId;\n    var limit = instance.props.limit;\n\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n\n  function removeToast(toastId) {\n    setToastIds(function (state) {\n      return isToastIdValid(toastId) ? state.filter(function (id) {\n        return id !== toastId;\n      }) : [];\n    });\n  }\n\n  function dequeueToast() {\n    var _instance$queue$shift = instance.queue.shift(),\n        toastContent = _instance$queue$shift.toastContent,\n        toastProps = _instance$queue$shift.toastProps,\n        staleId = _instance$queue$shift.staleId;\n\n    appendToast(toastContent, toastProps, staleId);\n  }\n  /**\r\n   * check if a container is attached to the dom\r\n   * check for multi-container, build only if associated\r\n   * check for duplicate toastId if no update\r\n   */\n\n\n  function isNotValid(options) {\n    return !containerRef.current || instance.props.enableMultiContainer && options.containerId !== instance.props.containerId || toastToRender.has(options.toastId) && options.updateId == null;\n  } // this function and all the function called inside needs to rely on refs\n\n\n  function buildToast(content, _ref2) {\n    var delay = _ref2.delay,\n        staleId = _ref2.staleId,\n        options = _objectWithoutPropertiesLoose(_ref2, _excluded);\n\n    if (!canBeRendered(content) || isNotValid(options)) return;\n    var toastId = options.toastId,\n        updateId = options.updateId,\n        data = options.data;\n    var props = instance.props;\n\n    var closeToast = function closeToast() {\n      return removeToast(toastId);\n    };\n\n    var isNotAnUpdate = updateId == null;\n    if (isNotAnUpdate) instance.count++;\n    var toastProps = {\n      toastId: toastId,\n      updateId: updateId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme,\n      icon: options.icon != null ? options.icon : props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || props.position,\n      transition: options.transition || props.transition,\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(options.bodyClassName || props.bodyClassName),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover) ? options.pauseOnHover : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss) ? options.pauseOnFocusLoss : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable) ? options.draggable : props.draggable,\n      draggablePercent: options.draggablePercent || props.draggablePercent,\n      draggableDirection: options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick) ? options.closeOnClick : props.closeOnClick,\n      progressClassName: parseClassName(options.progressClassName || props.progressClassName),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading ? false : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar) ? options.hideProgressBar : props.hideProgressBar,\n      progress: options.progress,\n      role: options.role || props.role,\n      deleteToast: function deleteToast() {\n        toastToRender[\"delete\"](toastId);\n        var queueLen = instance.queue.length;\n        instance.count = isToastIdValid(toastId) ? instance.count - 1 : instance.count - instance.displayedToast;\n        if (instance.count < 0) instance.count = 0;\n\n        if (queueLen > 0) {\n          var freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit;\n\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            var toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n\n            for (var i = 0; i < toDequeue; i++) {\n              dequeueToast();\n            }\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    };\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n    toastProps.closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton) ? props.closeButton : true;\n    }\n\n    var toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast: closeToast,\n        toastProps: toastProps,\n        data: data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({\n        closeToast: closeToast,\n        toastProps: toastProps,\n        data: data\n      });\n    } // not handling limit + delay by design. Waiting for user feedback first\n\n\n    if (props.limit && props.limit > 0 && instance.count > props.limit && isNotAnUpdate) {\n      instance.queue.push({\n        toastContent: toastContent,\n        toastProps: toastProps,\n        staleId: staleId\n      });\n    } else if (isNum(delay) && delay > 0) {\n      setTimeout(function () {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(content, toastProps, staleId) {\n    var toastId = toastProps.toastId;\n    if (staleId) toastToRender[\"delete\"](staleId);\n    toastToRender.set(toastId, {\n      content: content,\n      props: toastProps\n    });\n    setToastIds(function (state) {\n      return [].concat(state, [toastId]).filter(function (id) {\n        return id !== staleId;\n      });\n    });\n  }\n\n  function getToastToRender(cb) {\n    var toRender = new Map();\n    var collection = Array.from(toastToRender.values());\n    if (props.newestOnTop) collection.reverse();\n    collection.forEach(function (toast) {\n      var position = toast.props.position;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position).push(toast);\n    });\n    return Array.from(toRender, function (p) {\n      return cb(p[0], p[1]);\n    });\n  }\n\n  return {\n    getToastToRender: getToastToRender,\n    containerRef: containerRef,\n    isToastActive: isToastActive\n  };\n}\n\nfunction getX(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientX : e.clientX;\n}\n\nfunction getY(e) {\n  return e.targetTouches && e.targetTouches.length >= 1 ? e.targetTouches[0].clientY : e.clientY;\n}\n\nfunction useToast(props) {\n  var _useState = useState(false),\n      isRunning = _useState[0],\n      setIsRunning = _useState[1];\n\n  var _useState2 = useState(false),\n      preventExitTransition = _useState2[0],\n      setPreventExitTransition = _useState2[1];\n\n  var toastRef = useRef(null);\n  var drag = useRef({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  var syncProps = useRef(props);\n  var autoClose = props.autoClose,\n      pauseOnHover = props.pauseOnHover,\n      closeToast = props.closeToast,\n      onClick = props.onClick,\n      closeOnClick = props.closeOnClick;\n  useEffect(function () {\n    syncProps.current = props;\n  });\n  useEffect(function () {\n    if (toastRef.current) toastRef.current.addEventListener(\"d\"\n    /* ENTRANCE_ANIMATION_END */\n    , playToast, {\n      once: true\n    });\n    if (isFn(props.onOpen)) props.onOpen(isValidElement(props.children) && props.children.props);\n    return function () {\n      var props = syncProps.current;\n      if (isFn(props.onClose)) props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n  useEffect(function () {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return function () {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(e) {\n    if (props.draggable) {\n      bindDragEvents();\n      var toast = toastRef.current;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent);\n      drag.y = getY(e.nativeEvent);\n\n      if (props.draggableDirection === \"x\"\n      /* X */\n      ) {\n        drag.start = drag.x;\n        drag.removalDistance = toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance = toast.offsetHeight * (props.draggablePercent === 80\n        /* DRAGGABLE_PERCENT */\n        ? props.draggablePercent * 1.5 : props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      var _drag$boundingRect = drag.boundingRect,\n          top = _drag$boundingRect.top,\n          bottom = _drag$boundingRect.bottom,\n          left = _drag$boundingRect.left,\n          right = _drag$boundingRect.right;\n\n      if (props.pauseOnHover && drag.x >= left && drag.x <= right && drag.y >= top && drag.y <= bottom) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e) {\n    var toast = toastRef.current;\n\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e);\n      drag.y = getY(e);\n\n      if (props.draggableDirection === \"x\"\n      /* X */\n      ) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      } // prevent false positif during a toast click\n\n\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = \"translate\" + props.draggableDirection + \"(\" + drag.delta + \"px)\";\n      toast.style.opacity = \"\" + (1 - Math.abs(drag.delta / drag.removalDistance));\n    }\n  }\n\n  function onDragEnd() {\n    unbindDragEvents();\n    var toast = toastRef.current;\n\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = \"translate\" + props.draggableDirection + \"(0)\";\n      toast.style.opacity = '1';\n    }\n  }\n\n  var eventHandlers = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  } // prevent toast from closing when user drags the toast\n\n\n  if (closeOnClick) {\n    eventHandlers.onClick = function (e) {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast: playToast,\n    pauseToast: pauseToast,\n    isRunning: isRunning,\n    preventExitTransition: preventExitTransition,\n    toastRef: toastRef,\n    eventHandlers: eventHandlers\n  };\n}\n\nfunction CloseButton(_ref) {\n  var closeToast = _ref.closeToast,\n      theme = _ref.theme,\n      _ref$ariaLabel = _ref.ariaLabel,\n      ariaLabel = _ref$ariaLabel === void 0 ? 'close' : _ref$ariaLabel;\n  return createElement(\"button\", {\n    className: \"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__close-button \" + \"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__close-button--\" + theme,\n    type: \"button\",\n    onClick: function onClick(e) {\n      e.stopPropagation();\n      closeToast(e);\n    },\n    \"aria-label\": ariaLabel\n  }, createElement(\"svg\", {\n    \"aria-hidden\": \"true\",\n    viewBox: \"0 0 14 16\"\n  }, createElement(\"path\", {\n    fillRule: \"evenodd\",\n    d: \"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n  })));\n}\n\nfunction ProgressBar(_ref) {\n  var _cx, _animationEvent;\n\n  var delay = _ref.delay,\n      isRunning = _ref.isRunning,\n      closeToast = _ref.closeToast,\n      type = _ref.type,\n      hide = _ref.hide,\n      className = _ref.className,\n      userStyle = _ref.style,\n      controlledProgress = _ref.controlledProgress,\n      progress = _ref.progress,\n      rtl = _ref.rtl,\n      isIn = _ref.isIn,\n      theme = _ref.theme;\n\n  var style = _extends({}, userStyle, {\n    animationDuration: delay + \"ms\",\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  });\n\n  if (controlledProgress) style.transform = \"scaleX(\" + progress + \")\";\n  var defaultClassName = cx(\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar\", controlledProgress ? \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--controlled\" : \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--animated\", \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar-theme--\" + theme, \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--\" + type, (_cx = {}, _cx[\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__progress-bar--rtl\"] = rtl, _cx));\n  var classNames = isFn(className) ? className({\n    rtl: rtl,\n    type: type,\n    defaultClassName: defaultClassName\n  }) : cx(defaultClassName, className); // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n\n  var animationEvent = (_animationEvent = {}, _animationEvent[controlledProgress && progress >= 1 ? 'onTransitionEnd' : 'onAnimationEnd'] = controlledProgress && progress < 1 ? null : function () {\n    isIn && closeToast();\n  }, _animationEvent); // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return createElement(\"div\", Object.assign({\n    role: \"progressbar\",\n    \"aria-hidden\": hide ? 'true' : 'false',\n    \"aria-label\": \"notification timer\",\n    className: classNames,\n    style: style\n  }, animationEvent));\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\nvar _excluded$1 = [\"theme\", \"type\"];\n\nvar Svg = function Svg(_ref) {\n  var theme = _ref.theme,\n      type = _ref.type,\n      rest = _objectWithoutPropertiesLoose(_ref, _excluded$1);\n\n  return createElement(\"svg\", Object.assign({\n    viewBox: \"0 0 24 24\",\n    width: \"100%\",\n    height: \"100%\",\n    fill: theme === 'colored' ? 'currentColor' : \"var(--toastify-icon-color-\" + type + \")\"\n  }, rest));\n};\n\nfunction Warning(props) {\n  return createElement(Svg, Object.assign({}, props), createElement(\"path\", {\n    d: \"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\"\n  }));\n}\n\nfunction Info(props) {\n  return createElement(Svg, Object.assign({}, props), createElement(\"path\", {\n    d: \"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\"\n  }));\n}\n\nfunction Success(props) {\n  return createElement(Svg, Object.assign({}, props), createElement(\"path\", {\n    d: \"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\"\n  }));\n}\n\nfunction Error(props) {\n  return createElement(Svg, Object.assign({}, props), createElement(\"path\", {\n    d: \"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\"\n  }));\n}\n\nfunction Spinner() {\n  return createElement(\"div\", {\n    className: \"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__spinner\"\n  });\n}\n\nvar Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n\nvar Toast = function Toast(props) {\n  var _cx, _cx2;\n\n  var _useToast = useToast(props),\n      isRunning = _useToast.isRunning,\n      preventExitTransition = _useToast.preventExitTransition,\n      toastRef = _useToast.toastRef,\n      eventHandlers = _useToast.eventHandlers;\n\n  var closeButton = props.closeButton,\n      children = props.children,\n      autoClose = props.autoClose,\n      onClick = props.onClick,\n      type = props.type,\n      hideProgressBar = props.hideProgressBar,\n      closeToast = props.closeToast,\n      Transition = props.transition,\n      position = props.position,\n      className = props.className,\n      style = props.style,\n      bodyClassName = props.bodyClassName,\n      bodyStyle = props.bodyStyle,\n      progressClassName = props.progressClassName,\n      progressStyle = props.progressStyle,\n      updateId = props.updateId,\n      role = props.role,\n      progress = props.progress,\n      rtl = props.rtl,\n      toastId = props.toastId,\n      deleteToast = props.deleteToast,\n      isIn = props.isIn,\n      isLoading = props.isLoading,\n      icon = props.icon,\n      theme = props.theme;\n  var defaultClassName = cx(\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__toast\", \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__toast-theme--\" + theme, \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__toast--\" + type, (_cx = {}, _cx[\"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__toast--rtl\"] = rtl, _cx));\n  var cssClasses = isFn(className) ? className({\n    rtl: rtl,\n    position: position,\n    type: type,\n    defaultClassName: defaultClassName\n  }) : cx(defaultClassName, className);\n  var isProgressControlled = !!progress;\n  var maybeIcon = Icons[type];\n  var iconProps = {\n    theme: theme,\n    type: type\n  };\n  var Icon = maybeIcon && maybeIcon(iconProps);\n\n  if (icon === false) {\n    Icon = void 0;\n  } else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (isValidElement(icon)) {\n    Icon = cloneElement(icon, iconProps);\n  } else if (isStr(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  }\n\n  function renderCloseButton(closeButton) {\n    if (!closeButton) return;\n    var props = {\n      closeToast: closeToast,\n      type: type,\n      theme: theme\n    };\n    if (isFn(closeButton)) return closeButton(props);\n    if (isValidElement(closeButton)) return cloneElement(closeButton, props);\n  }\n\n  return createElement(Transition, {\n    isIn: isIn,\n    done: deleteToast,\n    position: position,\n    preventExitTransition: preventExitTransition,\n    nodeRef: toastRef\n  }, createElement(\"div\", Object.assign({\n    id: toastId,\n    onClick: onClick,\n    className: cssClasses\n  }, eventHandlers, {\n    style: style,\n    ref: toastRef\n  }), createElement(\"div\", Object.assign({}, isIn && {\n    role: role\n  }, {\n    className: isFn(bodyClassName) ? bodyClassName({\n      type: type\n    }) : cx(\"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__toast-body\", bodyClassName),\n    style: bodyStyle\n  }), Icon && createElement(\"div\", {\n    className: cx(\"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__toast-icon\", (_cx2 = {}, _cx2[\"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"--animate-icon \" + \"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__zoom-enter\"] = !isLoading, _cx2))\n  }, Icon), createElement(\"div\", null, children)), renderCloseButton(closeButton), (autoClose || isProgressControlled) && createElement(ProgressBar, Object.assign({}, updateId && !isProgressControlled ? {\n    key: \"pb-\" + updateId\n  } : {}, {\n    rtl: rtl,\n    theme: theme,\n    delay: autoClose,\n    isRunning: isRunning,\n    isIn: isIn,\n    closeToast: closeToast,\n    hide: hideProgressBar,\n    type: type,\n    style: progressStyle,\n    className: progressClassName,\n    controlledProgress: isProgressControlled,\n    progress: progress\n  }))));\n};\n\nvar Bounce = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__bounce-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__bounce-exit\",\n  appendPosition: true\n});\nvar Slide = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__slide-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__slide-exit\",\n  appendPosition: true\n});\nvar Zoom = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__zoom-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__zoom-exit\"\n});\nvar Flip = /*#__PURE__*/cssTransition({\n  enter: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__flip-enter\",\n  exit: \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"--animate \" + \"Toastify\"\n  /* CSS_NAMESPACE */\n  + \"__flip-exit\"\n});\n\nvar ToastContainer = function ToastContainer(props) {\n  var _useToastContainer = useToastContainer(props),\n      getToastToRender = _useToastContainer.getToastToRender,\n      containerRef = _useToastContainer.containerRef,\n      isToastActive = _useToastContainer.isToastActive;\n\n  var className = props.className,\n      style = props.style,\n      rtl = props.rtl,\n      containerId = props.containerId;\n\n  function getClassName(position) {\n    var _cx;\n\n    var defaultClassName = cx(\"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__toast-container\", \"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__toast-container--\" + position, (_cx = {}, _cx[\"Toastify\"\n    /* CSS_NAMESPACE */\n    + \"__toast-container--rtl\"] = rtl, _cx));\n    return isFn(className) ? className({\n      position: position,\n      rtl: rtl,\n      defaultClassName: defaultClassName\n    }) : cx(defaultClassName, parseClassName(className));\n  }\n\n  return createElement(\"div\", {\n    ref: containerRef,\n    className: \"Toastify\"\n    /* CSS_NAMESPACE */\n    ,\n    id: containerId\n  }, getToastToRender(function (position, toastList) {\n    var containerStyle = !toastList.length ? _extends({}, style, {\n      pointerEvents: 'none'\n    }) : _extends({}, style);\n    return createElement(\"div\", {\n      className: getClassName(position),\n      style: containerStyle,\n      key: \"container-\" + position\n    }, toastList.map(function (_ref) {\n      var content = _ref.content,\n          toastProps = _ref.props;\n      return createElement(Toast, Object.assign({}, toastProps, {\n        isIn: isToastActive(toastProps.toastId),\n        key: \"toast-\" + toastProps.key,\n        closeButton: toastProps.closeButton === true ? CloseButton : toastProps.closeButton\n      }), content);\n    }));\n  }));\n};\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: 80\n  /* DRAGGABLE_PERCENT */\n  ,\n  draggableDirection: \"x\"\n  /* X */\n  ,\n  role: 'alert',\n  theme: 'light'\n};\nvar containers = /*#__PURE__*/new Map();\nvar latestInstance;\nvar containerDomNode;\nvar containerConfig;\nvar queue = [];\nvar lazy = false;\n/**\r\n * Get the toast by id, given it's in the DOM, otherwise returns null\r\n */\n\nfunction getToast(toastId, _ref) {\n  var containerId = _ref.containerId;\n  var container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n  return container.getToast(toastId);\n}\n/**\r\n * Generate a random toastId\r\n */\n\n\nfunction generateToastId() {\n  return Math.random().toString(36).substring(2, 9);\n}\n/**\r\n * Generate a toastId or use the one provided\r\n */\n\n\nfunction getToastId(options) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n/**\r\n * If the container is not mounted, the toast is enqueued and\r\n * the container lazy mounted\r\n */\n\n\nfunction dispatchToast(content, options) {\n  if (containers.size > 0) {\n    eventManager.emit(0\n    /* Show */\n    , content, options);\n  } else {\n    queue.push({\n      content: content,\n      options: options\n    });\n\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(createElement(ToastContainer, Object.assign({}, containerConfig)), containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n/**\r\n * Merge provided options with the defaults settings and generate the toastId\r\n */\n\n\nfunction mergeOptions(type, options) {\n  return _extends({}, options, {\n    type: options && options.type || type,\n    toastId: getToastId(options)\n  });\n}\n\nfunction createToastByType(type) {\n  return function (content, options) {\n    return dispatchToast(content, mergeOptions(type, options));\n  };\n}\n\nfunction toast(content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n}\n\ntoast.loading = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, _extends({\n    isLoading: true,\n    autoClose: false,\n    closeOnClick: false,\n    closeButton: false,\n    draggable: false\n  }, options)));\n};\n\nfunction handlePromise(promise, _ref2, options) {\n  var pending = _ref2.pending,\n      error = _ref2.error,\n      success = _ref2.success;\n  var id;\n\n  if (pending) {\n    id = isStr(pending) ? toast.loading(pending, options) : toast.loading(pending.render, _extends({}, options, pending));\n  }\n\n  var resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null\n  };\n\n  var resolver = function resolver(type, input, result) {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n\n    var baseParams = _extends({\n      type: type\n    }, resetParams, options, {\n      data: result\n    });\n\n    var params = isStr(input) ? {\n      render: input\n    } : input; // if the id is set we know that it's an update\n\n    if (id) {\n      toast.update(id, _extends({}, baseParams, params));\n    } else {\n      // using toast.promise without loading\n      toast(params.render, _extends({}, baseParams, params));\n    }\n\n    return result;\n  };\n\n  var p = isFn(promise) ? promise() : promise; //call the resolvers only when needed\n\n  p.then(function (result) {\n    return resolver('success', success, result);\n  })[\"catch\"](function (err) {\n    return resolver('error', error, err);\n  });\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = /*#__PURE__*/createToastByType(TYPE.SUCCESS);\ntoast.info = /*#__PURE__*/createToastByType(TYPE.INFO);\ntoast.error = /*#__PURE__*/createToastByType(TYPE.ERROR);\ntoast.warning = /*#__PURE__*/createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\n\ntoast.dark = function (content, options) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, _extends({\n    theme: 'dark'\n  }, options)));\n};\n/**\r\n * Remove toast programmaticaly\r\n */\n\n\ntoast.dismiss = function (id) {\n  return eventManager.emit(1\n  /* Clear */\n  , id);\n};\n/**\r\n * Clear waiting queue when limit is used\r\n */\n\n\ntoast.clearWaitingQueue = function (params) {\n  if (params === void 0) {\n    params = {};\n  }\n\n  return eventManager.emit(5\n  /* ClearWaitingQueue */\n  , params);\n};\n/**\r\n * return true if one container is displaying the toast\r\n */\n\n\ntoast.isActive = function (id) {\n  var isToastActive = false;\n  containers.forEach(function (container) {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n  return isToastActive;\n};\n\ntoast.update = function (toastId, options) {\n  if (options === void 0) {\n    options = {};\n  } // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n\n\n  setTimeout(function () {\n    var toast = getToast(toastId, options);\n\n    if (toast) {\n      var oldOptions = toast.props,\n          oldContent = toast.content;\n\n      var nextOptions = _extends({}, oldOptions, options, {\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      });\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n      var content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n/**\r\n * Used for controlled progress bar.\r\n */\n\n\ntoast.done = function (id) {\n  toast.update(id, {\n    progress: 1\n  });\n};\n/**\r\n * Track changes. The callback get the number of toast displayed\r\n *\r\n */\n\n\ntoast.onChange = function (callback) {\n  if (isFn(callback)) {\n    eventManager.on(4\n    /* Change */\n    , callback);\n  }\n\n  return function () {\n    isFn(callback) && eventManager.off(4\n    /* Change */\n    , callback);\n  };\n};\n/**\r\n * Configure the ToastContainer when lazy mounted\r\n * Prefer ToastContainer over this one\r\n */\n\n\ntoast.configure = function (config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n/**\r\n * Wait until the ToastContainer is mounted to dispatch the toast\r\n * and attach isActive method\r\n */\n\neventManager.on(2\n/* DidMount */\n, function (containerInstance) {\n  latestInstance = containerInstance.containerId || containerInstance;\n  containers.set(latestInstance, containerInstance);\n  queue.forEach(function (item) {\n    eventManager.emit(0\n    /* Show */\n    , item.content, item.options);\n  });\n  queue = [];\n}).on(3\n/* WillUnmount */\n, function (containerInstance) {\n  containers[\"delete\"](containerInstance.containerId || containerInstance);\n\n  if (containers.size === 0) {\n    eventManager.off(0\n    /* Show */\n    ).off(1\n    /* Clear */\n    ).off(5\n    /* ClearWaitingQueue */\n    );\n  }\n\n  if (canUseDom && containerDomNode) {\n    document.body.removeChild(containerDomNode);\n  }\n});\nexport { Bounce, Flip, Icons, Slide, ToastContainer, Zoom, collapseToast, cssTransition, toast, useToast, useToastContainer };","map":{"version":3,"sources":["/home/nrk/Desktop/projeler/bookStore/client/node_modules/react-toastify/src/utils/propValidator.ts","/home/nrk/Desktop/projeler/bookStore/client/node_modules/react-toastify/src/utils/constant.ts","/home/nrk/Desktop/projeler/bookStore/client/node_modules/react-toastify/src/utils/collapseToast.ts","/home/nrk/Desktop/projeler/bookStore/client/node_modules/react-toastify/src/utils/cssTransition.tsx","/home/nrk/Desktop/projeler/bookStore/client/node_modules/react-toastify/src/core/eventManager.ts","/home/nrk/Desktop/projeler/bookStore/client/node_modules/react-toastify/src/hooks/useToastContainer.ts","/home/nrk/Desktop/projeler/bookStore/client/node_modules/react-toastify/src/hooks/useToast.ts","/home/nrk/Desktop/projeler/bookStore/client/node_modules/react-toastify/src/components/CloseButton.tsx","/home/nrk/Desktop/projeler/bookStore/client/node_modules/react-toastify/src/components/ProgressBar.tsx","/home/nrk/Desktop/projeler/bookStore/client/node_modules/react-toastify/src/components/Icons.tsx","/home/nrk/Desktop/projeler/bookStore/client/node_modules/react-toastify/src/components/Toast.tsx","/home/nrk/Desktop/projeler/bookStore/client/node_modules/react-toastify/src/components/Transitions.tsx","/home/nrk/Desktop/projeler/bookStore/client/node_modules/react-toastify/src/components/ToastContainer.tsx","/home/nrk/Desktop/projeler/bookStore/client/node_modules/react-toastify/src/core/toast.tsx"],"names":["isNum","v","isNaN","isBool","isStr","isFn","parseClassName","isToastIdValid","toastId","getAutoCloseDelay","toastAutoClose","containerAutoClose","canUseDom","window","canBeRendered","content","isValidElement","POSITION","TOP_LEFT","TOP_RIGHT","TOP_CENTER","BOTTOM_LEFT","BOTTOM_RIGHT","BOTTOM_CENTER","TYPE","INFO","SUCCESS","WARNING","ERROR","DEFAULT","collapseToast","node","done","duration","scrollHeight","style","requestAnimationFrame","setTimeout","cssTransition","enter","exit","appendPosition","collapse","collapseDuration","children","position","preventExitTransition","nodeRef","isIn","enterClassName","exitClassName","baseClassName","useRef","animationStep","useLayoutEffect","onEnter","useEffect","onExited","onExit","e","React","eventManager","list","emitQueue","on","off","cb","cancelEmit","timers","emit","args","timer","callback","useToastContainer","props","forceUpdate","useReducer","x","toastIds","setToastIds","useState","containerRef","toastToRender","isToastActive","instance","toastKey","displayedToast","count","queue","containerId","getToast","removeToast","limit","id","toastContent","toastProps","staleId","appendToast","options","delay","isNotValid","updateId","data","closeToast","isNotAnUpdate","isLoading","theme","icon","key","type","closeButton","rtl","transition","className","bodyClassName","bodyStyle","onClick","pauseOnHover","pauseOnFocusLoss","draggable","draggablePercent","draggableDirection","closeOnClick","progressClassName","progressStyle","autoClose","hideProgressBar","progress","role","deleteToast","queueLen","freeSlot","dequeueToast","toDequeue","i","cloneElement","toRender","collection","Array","toast","p","getToastToRender","useToast","isRunning","setIsRunning","setPreventExitTransition","toastRef","drag","start","y","delta","removalDistance","canCloseOnClick","canDrag","boundingRect","didMove","syncProps","once","bindFocusEvents","unbindFocusEvents","bindDragEvents","getX","getY","top","bottom","left","right","pauseToast","playToast","document","Math","unbindDragEvents","eventHandlers","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onDragTransitionEnd","CloseButton","ariaLabel","viewBox","fillRule","d","ProgressBar","hide","userStyle","controlledProgress","animationDuration","animationPlayState","opacity","defaultClassName","cx","classNames","animationEvent","Svg","rest","width","height","fill","Icons","info","warning","success","error","spinner","Spinner","Toast","Transition","cssClasses","isProgressControlled","maybeIcon","iconProps","Icon","ref","renderCloseButton","Bounce","Slide","Zoom","Flip","ToastContainer","containerStyle","toastList","pointerEvents","getClassName","newestOnTop","containers","lazy","container","generateToastId","containerDomNode","render","getToastId","dispatchToast","mergeOptions","pending","resetParams","resolver","input","baseParams","result","params","promise","createToastByType","oldOptions","oldContent","nextOptions","config","containerConfig","latestInstance","containerInstance","item"],"mappings":"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","sourcesContent":["import { isValidElement } from 'react';\n\nimport { Id } from '../types';\n\nexport function isNum(v: any): v is Number {\n  return typeof v === 'number' && !isNaN(v);\n}\n\nexport function isBool(v: any): v is Boolean {\n  return typeof v === 'boolean';\n}\n\nexport function isStr(v: any): v is String {\n  return typeof v === 'string';\n}\n\nexport function isFn(v: any): v is Function {\n  return typeof v === 'function';\n}\n\nexport function parseClassName(v: any) {\n  return isStr(v) || isFn(v) ? v : null;\n}\n\nexport function isToastIdValid(toastId?: Id) {\n  return toastId === 0 || toastId;\n}\n\nexport function getAutoCloseDelay(\n  toastAutoClose?: false | number,\n  containerAutoClose?: false | number\n) {\n  return toastAutoClose === false ||\n    (isNum(toastAutoClose) && toastAutoClose > 0)\n    ? toastAutoClose\n    : containerAutoClose;\n}\n\nexport const canUseDom = !!(\n  typeof window !== 'undefined' &&\n  window.document &&\n  window.document.createElement\n);\n\nexport function canBeRendered<T>(content: T): boolean {\n  return (\n    isValidElement(content) || isStr(content) || isFn(content) || isNum(content)\n  );\n}\n","import { ToastPosition, TypeOptions } from '../types';\n\ntype KeyOfPosition =\n  | 'TOP_LEFT'\n  | 'TOP_RIGHT'\n  | 'TOP_CENTER'\n  | 'BOTTOM_LEFT'\n  | 'BOTTOM_RIGHT'\n  | 'BOTTOM_CENTER';\n\ntype KeyOfType = 'INFO' | 'SUCCESS' | 'WARNING' | 'ERROR' | 'DEFAULT';\n\nexport const POSITION: { [key in KeyOfPosition]: ToastPosition } = {\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right',\n  TOP_CENTER: 'top-center',\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  BOTTOM_CENTER: 'bottom-center'\n};\n\nexport const TYPE: { [key in KeyOfType]: TypeOptions } = {\n  INFO: 'info',\n  SUCCESS: 'success',\n  WARNING: 'warning',\n  ERROR: 'error',\n  DEFAULT: 'default'\n};\n\nexport const enum Default {\n  COLLAPSE_DURATION = 300,\n  DEBOUNCE_DURATION = 50,\n  CSS_NAMESPACE = 'Toastify',\n  DRAGGABLE_PERCENT = 80\n}\n\nexport const enum Direction {\n  X = 'x',\n  Y = 'y'\n}\n\nexport const enum SyntheticEvent {\n  ENTRANCE_ANIMATION_END = 'd'\n}\n","import { Default } from './constant';\n\n/**\n * Used to collapse toast after exit animation\n */\nexport function collapseToast(\n  node: HTMLElement,\n  done: () => void,\n  duration = Default.COLLAPSE_DURATION\n) {\n  const { scrollHeight, style } = node;\n\n  requestAnimationFrame(() => {\n    style.minHeight = 'initial';\n    style.height = scrollHeight + 'px';\n    style.transition = `all ${duration}ms`;\n\n    requestAnimationFrame(() => {\n      style.height = '0';\n      style.padding = '0';\n      style.margin = '0';\n      setTimeout(done, duration as number);\n    });\n  });\n}\n","import React, { useEffect, useLayoutEffect, useRef } from 'react';\n\nimport { collapseToast } from './collapseToast';\nimport { Default, SyntheticEvent } from './constant';\n\nimport { ToastTransitionProps } from '../types';\n\nexport interface CSSTransitionProps {\n  /**\n   * Css class to apply when toast enter\n   */\n  enter: string;\n\n  /**\n   * Css class to apply when toast leave\n   */\n  exit: string;\n\n  /**\n   * Append current toast position to the classname.\n   * If multiple classes are provided, only the last one will get the position\n   * For instance `myclass--top-center`...\n   * `Default: false`\n   */\n  appendPosition?: boolean;\n\n  /**\n   * Collapse toast smoothly when exit animation end\n   * `Default: true`\n   */\n  collapse?: boolean;\n\n  /**\n   * Collapse transition duration\n   * `Default: 300`\n   */\n  collapseDuration?: number;\n}\n\nconst enum AnimationStep {\n  Enter,\n  Exit\n}\n\n/**\n * Css animation that just work.\n * You could use animate.css for instance\n *\n *\n * ```\n * cssTransition({\n *   enter: \"animate__animated animate__bounceIn\",\n *   exit: \"animate__animated animate__bounceOut\"\n * })\n * ```\n *\n */\nexport function cssTransition({\n  enter,\n  exit,\n  appendPosition = false,\n  collapse = true,\n  collapseDuration = Default.COLLAPSE_DURATION\n}: CSSTransitionProps) {\n  return function ToastTransition({\n    children,\n    position,\n    preventExitTransition,\n    done,\n    nodeRef,\n    isIn\n  }: ToastTransitionProps) {\n    const enterClassName = appendPosition ? `${enter}--${position}` : enter;\n    const exitClassName = appendPosition ? `${exit}--${position}` : exit;\n    const baseClassName = useRef<string>();\n    const animationStep = useRef(AnimationStep.Enter);\n\n    useLayoutEffect(() => {\n      onEnter();\n    }, []);\n\n    useEffect(() => {\n      if (!isIn) preventExitTransition ? onExited() : onExit();\n    }, [isIn]);\n\n    function onEnter() {\n      const node = nodeRef.current!;\n      baseClassName.current = node.className;\n      node.className += ` ${enterClassName}`;\n      node.addEventListener('animationend', onEntered);\n    }\n\n    function onEntered(e: AnimationEvent) {\n      if (e.target !== nodeRef.current) return;\n\n      const node = nodeRef.current!;\n      node.dispatchEvent(new Event(SyntheticEvent.ENTRANCE_ANIMATION_END));\n      node.removeEventListener('animationend', onEntered);\n      if (animationStep.current === AnimationStep.Enter) {\n        node.className = baseClassName.current!;\n      }\n    }\n\n    function onExit() {\n      animationStep.current = AnimationStep.Exit;\n      const node = nodeRef.current!;\n\n      node.className += ` ${exitClassName}`;\n      node.addEventListener('animationend', onExited);\n    }\n\n    function onExited() {\n      const node = nodeRef.current!;\n\n      node.removeEventListener('animationend', onExited);\n      collapse ? collapseToast(node, done, collapseDuration) : done();\n    }\n\n    return <>{children}</>;\n  };\n}\n","import {\n  Id,\n  ToastContent,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps\n} from '../types';\nimport { ContainerInstance } from '../hooks';\n\nexport const enum Event {\n  Show,\n  Clear,\n  DidMount,\n  WillUnmount,\n  Change,\n  ClearWaitingQueue\n}\n\ntype OnShowCallback = (\n  content: ToastContent,\n  options: NotValidatedToastProps\n) => void;\ntype OnClearCallback = (id?: Id) => void;\ntype OnClearWaitingQueue = (params: ClearWaitingQueueParams) => void;\ntype OnDidMountCallback = (containerInstance: ContainerInstance) => void;\ntype OnWillUnmountCallback = OnDidMountCallback;\nexport type OnChangeCallback = (\n  toast: number,\n  containerId?: number | string\n) => void;\ntype Callback =\n  | OnShowCallback\n  | OnClearCallback\n  | OnClearWaitingQueue\n  | OnDidMountCallback\n  | OnWillUnmountCallback\n  | OnChangeCallback;\ntype TimeoutId = ReturnType<typeof setTimeout>;\n\nexport interface EventManager {\n  list: Map<Event, Callback[]>;\n  emitQueue: Map<Event, TimeoutId[]>;\n  on(event: Event.Show, callback: OnShowCallback): EventManager;\n  on(event: Event.Clear, callback: OnClearCallback): EventManager;\n  on(\n    event: Event.ClearWaitingQueue,\n    callback: OnClearWaitingQueue\n  ): EventManager;\n  on(event: Event.DidMount, callback: OnDidMountCallback): EventManager;\n  on(event: Event.WillUnmount, callback: OnWillUnmountCallback): EventManager;\n  on(event: Event.Change, callback: OnChangeCallback): EventManager;\n  off(event: Event, callback?: Callback): EventManager;\n  cancelEmit(event: Event): EventManager;\n  emit(\n    event: Event.Show,\n    content: React.ReactNode,\n    options: NotValidatedToastProps\n  ): void;\n  emit(event: Event.Clear, id?: string | number): void;\n  emit(event: Event.ClearWaitingQueue, params: ClearWaitingQueueParams): void;\n  emit(event: Event.DidMount, containerInstance: ContainerInstance): void;\n  emit(event: Event.WillUnmount, containerInstance: ContainerInstance): void;\n  emit(event: Event.Change, toast: number, containerId?: number | string): void;\n}\n\nexport const eventManager: EventManager = {\n  list: new Map(),\n  emitQueue: new Map(),\n\n  on(event: Event, callback: Callback) {\n    this.list.has(event) || this.list.set(event, []);\n    this.list.get(event)!.push(callback);\n    return this;\n  },\n\n  off(event, callback) {\n    if (callback) {\n      const cb = this.list.get(event)!.filter(cb => cb !== callback);\n      this.list.set(event, cb);\n      return this;\n    }\n    this.list.delete(event);\n    return this;\n  },\n\n  cancelEmit(event) {\n    const timers = this.emitQueue.get(event);\n    if (timers) {\n      timers.forEach(clearTimeout);\n      this.emitQueue.delete(event);\n    }\n\n    return this;\n  },\n\n  /**\n   * Enqueue the event at the end of the call stack\n   * Doing so let the user call toast as follow:\n   * toast('1')\n   * toast('2')\n   * toast('3')\n   * Without setTimemout the code above will not work\n   */\n  emit(event: Event, ...args: any[]) {\n    this.list.has(event) &&\n      this.list.get(event)!.forEach((callback: Callback) => {\n        const timer: TimeoutId = setTimeout(() => {\n          // @ts-ignore\n          callback(...args);\n        }, 0);\n\n        this.emitQueue.has(event) || this.emitQueue.set(event, []);\n        this.emitQueue.get(event)!.push(timer);\n      });\n  }\n};\n","import {\n  useEffect,\n  useRef,\n  useReducer,\n  cloneElement,\n  isValidElement,\n  useState\n} from 'react';\nimport {\n  parseClassName,\n  canBeRendered,\n  isBool,\n  isFn,\n  isNum,\n  isStr,\n  isToastIdValid,\n  getAutoCloseDelay\n} from '../utils';\nimport { eventManager, Event } from '../core/eventManager';\n\nimport {\n  Id,\n  ToastContainerProps,\n  ToastProps,\n  ToastContent,\n  Toast,\n  ToastPosition,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  ToastTransition\n} from '../types';\n\ninterface QueuedToast {\n  toastContent: ToastContent;\n  toastProps: ToastProps;\n  staleId?: Id;\n}\n\nexport interface ContainerInstance {\n  toastKey: number;\n  displayedToast: number;\n  props: ToastContainerProps;\n  containerId?: Id | null;\n  isToastActive: (toastId: Id) => boolean;\n  getToast: (id: Id) => Toast | null | undefined;\n  queue: QueuedToast[];\n  count: number;\n}\n\nexport function useToastContainer(props: ToastContainerProps) {\n  const [, forceUpdate] = useReducer(x => x + 1, 0);\n  const [toastIds, setToastIds] = useState<Id[]>([]);\n  const containerRef = useRef(null);\n  const toastToRender = useRef(new Map<Id, Toast>()).current;\n  const isToastActive = (id: Id) => toastIds.indexOf(id) !== -1;\n  const instance = useRef<ContainerInstance>({\n    toastKey: 1,\n    displayedToast: 0,\n    count: 0,\n    queue: [],\n    props,\n    containerId: null,\n    isToastActive,\n    getToast: id => toastToRender.get(id)\n  }).current;\n\n  useEffect(() => {\n    instance.containerId = props.containerId;\n    eventManager\n      .cancelEmit(Event.WillUnmount)\n      .on(Event.Show, buildToast)\n      .on(Event.Clear, toastId => containerRef.current && removeToast(toastId))\n      .on(Event.ClearWaitingQueue, clearWaitingQueue)\n      .emit(Event.DidMount, instance);\n\n    return () => eventManager.emit(Event.WillUnmount, instance);\n  }, []);\n\n  useEffect(() => {\n    instance.isToastActive = isToastActive;\n    instance.displayedToast = toastIds.length;\n    eventManager.emit(Event.Change, toastIds.length, props.containerId);\n  }, [toastIds]);\n\n  useEffect(() => {\n    instance.props = props;\n  });\n\n  function clearWaitingQueue({ containerId }: ClearWaitingQueueParams) {\n    const { limit } = instance.props;\n    if (limit && (!containerId || instance.containerId === containerId)) {\n      instance.count -= instance.queue.length;\n      instance.queue = [];\n    }\n  }\n\n  function removeToast(toastId?: Id) {\n    setToastIds(state =>\n      isToastIdValid(toastId) ? state.filter(id => id !== toastId) : []\n    );\n  }\n\n  function dequeueToast() {\n    const {\n      toastContent,\n      toastProps,\n      staleId\n    } = instance.queue.shift() as QueuedToast;\n    appendToast(toastContent, toastProps, staleId);\n  }\n\n  /**\n   * check if a container is attached to the dom\n   * check for multi-container, build only if associated\n   * check for duplicate toastId if no update\n   */\n  function isNotValid(options: NotValidatedToastProps) {\n    return (\n      !containerRef.current ||\n      (instance.props.enableMultiContainer &&\n        options.containerId !== instance.props.containerId) ||\n      (toastToRender.has(options.toastId) && options.updateId == null)\n    );\n  }\n\n  // this function and all the function called inside needs to rely on refs\n  function buildToast(\n    content: ToastContent,\n    { delay, staleId, ...options }: NotValidatedToastProps\n  ) {\n    if (!canBeRendered(content) || isNotValid(options)) return;\n\n    const { toastId, updateId, data } = options;\n    const { props } = instance;\n    const closeToast = () => removeToast(toastId);\n    const isNotAnUpdate = updateId == null;\n\n    if (isNotAnUpdate) instance.count++;\n\n    const toastProps: ToastProps = {\n      toastId,\n      updateId,\n      isLoading: options.isLoading,\n      theme: options.theme || props.theme!,\n      icon: options.icon != null ? options.icon : props.icon,\n      isIn: false,\n      key: options.key || instance.toastKey++,\n      type: options.type!,\n      closeToast: closeToast,\n      closeButton: options.closeButton,\n      rtl: props.rtl,\n      position: options.position || (props.position as ToastPosition),\n      transition: options.transition || (props.transition as ToastTransition),\n      className: parseClassName(options.className || props.toastClassName),\n      bodyClassName: parseClassName(\n        options.bodyClassName || props.bodyClassName\n      ),\n      style: options.style || props.toastStyle,\n      bodyStyle: options.bodyStyle || props.bodyStyle,\n      onClick: options.onClick || props.onClick,\n      pauseOnHover: isBool(options.pauseOnHover)\n        ? options.pauseOnHover\n        : props.pauseOnHover,\n      pauseOnFocusLoss: isBool(options.pauseOnFocusLoss)\n        ? options.pauseOnFocusLoss\n        : props.pauseOnFocusLoss,\n      draggable: isBool(options.draggable)\n        ? options.draggable\n        : props.draggable,\n      draggablePercent:\n        options.draggablePercent || (props.draggablePercent as number),\n      draggableDirection:\n        options.draggableDirection || props.draggableDirection,\n      closeOnClick: isBool(options.closeOnClick)\n        ? options.closeOnClick\n        : props.closeOnClick,\n      progressClassName: parseClassName(\n        options.progressClassName || props.progressClassName\n      ),\n      progressStyle: options.progressStyle || props.progressStyle,\n      autoClose: options.isLoading\n        ? false\n        : getAutoCloseDelay(options.autoClose, props.autoClose),\n      hideProgressBar: isBool(options.hideProgressBar)\n        ? options.hideProgressBar\n        : props.hideProgressBar,\n      progress: options.progress,\n      role: options.role || props.role,\n      deleteToast() {\n        toastToRender.delete(toastId);\n        const queueLen = instance.queue.length;\n        instance.count = isToastIdValid(toastId)\n          ? instance.count - 1\n          : instance.count - instance.displayedToast;\n\n        if (instance.count < 0) instance.count = 0;\n\n        if (queueLen > 0) {\n          const freeSlot = isToastIdValid(toastId) ? 1 : instance.props.limit!;\n\n          if (queueLen === 1 || freeSlot === 1) {\n            instance.displayedToast++;\n            dequeueToast();\n          } else {\n            const toDequeue = freeSlot > queueLen ? queueLen : freeSlot;\n            instance.displayedToast = toDequeue;\n\n            for (let i = 0; i < toDequeue; i++) dequeueToast();\n          }\n        } else {\n          forceUpdate();\n        }\n      }\n    };\n\n    if (isFn(options.onOpen)) toastProps.onOpen = options.onOpen;\n    if (isFn(options.onClose)) toastProps.onClose = options.onClose;\n\n    toastProps.closeButton = props.closeButton;\n\n    if (options.closeButton === false || canBeRendered(options.closeButton)) {\n      toastProps.closeButton = options.closeButton;\n    } else if (options.closeButton === true) {\n      toastProps.closeButton = canBeRendered(props.closeButton)\n        ? props.closeButton\n        : true;\n    }\n\n    let toastContent = content;\n\n    if (isValidElement(content) && !isStr(content.type)) {\n      toastContent = cloneElement(content, {\n        closeToast,\n        toastProps,\n        data\n      });\n    } else if (isFn(content)) {\n      toastContent = content({ closeToast, toastProps, data });\n    }\n\n    // not handling limit + delay by design. Waiting for user feedback first\n    if (\n      props.limit &&\n      props.limit > 0 &&\n      instance.count > props.limit &&\n      isNotAnUpdate\n    ) {\n      instance.queue.push({ toastContent, toastProps, staleId });\n    } else if (isNum(delay) && (delay as number) > 0) {\n      setTimeout(() => {\n        appendToast(toastContent, toastProps, staleId);\n      }, delay);\n    } else {\n      appendToast(toastContent, toastProps, staleId);\n    }\n  }\n\n  function appendToast(\n    content: ToastContent,\n    toastProps: ToastProps,\n    staleId?: Id\n  ) {\n    const { toastId } = toastProps;\n\n    if (staleId) toastToRender.delete(staleId);\n\n    toastToRender.set(toastId, {\n      content,\n      props: toastProps\n    });\n    setToastIds(state => [...state, toastId].filter(id => id !== staleId));\n  }\n\n  function getToastToRender<T>(\n    cb: (position: ToastPosition, toastList: Toast[]) => T\n  ) {\n    const toRender = new Map<ToastPosition, Toast[]>();\n    const collection = Array.from(toastToRender.values());\n\n    if (props.newestOnTop) collection.reverse();\n\n    collection.forEach(toast => {\n      const { position } = toast.props;\n      toRender.has(position) || toRender.set(position, []);\n      toRender.get(position)!.push(toast);\n    });\n\n    return Array.from(toRender, p => cb(p[0], p[1]));\n  }\n\n  return {\n    getToastToRender,\n    containerRef,\n    isToastActive\n  };\n}\n","import {\n  useState,\n  useRef,\n  useEffect,\n  isValidElement,\n  DOMAttributes\n} from 'react';\n\nimport { isFn, Default, Direction, SyntheticEvent } from '../utils';\nimport { ToastProps } from '../types';\n\ninterface Draggable {\n  start: number;\n  x: number;\n  y: number;\n  delta: number;\n  removalDistance: number;\n  canCloseOnClick: boolean;\n  canDrag: boolean;\n  boundingRect: DOMRect | null;\n  didMove: boolean;\n}\n\ntype DragEvent = MouseEvent & TouchEvent;\n\nfunction getX(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientX\n    : e.clientX;\n}\n\nfunction getY(e: DragEvent) {\n  return e.targetTouches && e.targetTouches.length >= 1\n    ? e.targetTouches[0].clientY\n    : e.clientY;\n}\n\nexport function useToast(props: ToastProps) {\n  const [isRunning, setIsRunning] = useState(false);\n  const [preventExitTransition, setPreventExitTransition] = useState(false);\n  const toastRef = useRef<HTMLDivElement>(null);\n  const drag = useRef<Draggable>({\n    start: 0,\n    x: 0,\n    y: 0,\n    delta: 0,\n    removalDistance: 0,\n    canCloseOnClick: true,\n    canDrag: false,\n    boundingRect: null,\n    didMove: false\n  }).current;\n  const syncProps = useRef(props);\n  const { autoClose, pauseOnHover, closeToast, onClick, closeOnClick } = props;\n\n  useEffect(() => {\n    syncProps.current = props;\n  });\n\n  useEffect(() => {\n    if (toastRef.current)\n      toastRef.current.addEventListener(\n        SyntheticEvent.ENTRANCE_ANIMATION_END,\n        playToast,\n        { once: true }\n      );\n\n    if (isFn(props.onOpen))\n      props.onOpen(isValidElement(props.children) && props.children.props);\n\n    return () => {\n      const props = syncProps.current;\n      if (isFn(props.onClose))\n        props.onClose(isValidElement(props.children) && props.children.props);\n    };\n  }, []);\n\n  useEffect(() => {\n    props.pauseOnFocusLoss && bindFocusEvents();\n    return () => {\n      props.pauseOnFocusLoss && unbindFocusEvents();\n    };\n  }, [props.pauseOnFocusLoss]);\n\n  function onDragStart(\n    e: React.MouseEvent<HTMLElement, MouseEvent> | React.TouchEvent<HTMLElement>\n  ) {\n    if (props.draggable) {\n      bindDragEvents();\n      const toast = toastRef.current!;\n      drag.canCloseOnClick = true;\n      drag.canDrag = true;\n      drag.boundingRect = toast.getBoundingClientRect();\n      toast.style.transition = '';\n      drag.x = getX(e.nativeEvent as DragEvent);\n      drag.y = getY(e.nativeEvent as DragEvent);\n\n      if (props.draggableDirection === Direction.X) {\n        drag.start = drag.x;\n        drag.removalDistance =\n          toast.offsetWidth * (props.draggablePercent / 100);\n      } else {\n        drag.start = drag.y;\n        drag.removalDistance =\n          toast.offsetHeight *\n          (props.draggablePercent === Default.DRAGGABLE_PERCENT\n            ? props.draggablePercent * 1.5\n            : props.draggablePercent / 100);\n      }\n    }\n  }\n\n  function onDragTransitionEnd() {\n    if (drag.boundingRect) {\n      const { top, bottom, left, right } = drag.boundingRect;\n\n      if (\n        props.pauseOnHover &&\n        drag.x >= left &&\n        drag.x <= right &&\n        drag.y >= top &&\n        drag.y <= bottom\n      ) {\n        pauseToast();\n      } else {\n        playToast();\n      }\n    }\n  }\n\n  function playToast() {\n    setIsRunning(true);\n  }\n\n  function pauseToast() {\n    setIsRunning(false);\n  }\n\n  function bindFocusEvents() {\n    if (!document.hasFocus()) pauseToast();\n\n    window.addEventListener('focus', playToast);\n    window.addEventListener('blur', pauseToast);\n  }\n\n  function unbindFocusEvents() {\n    window.removeEventListener('focus', playToast);\n    window.removeEventListener('blur', pauseToast);\n  }\n\n  function bindDragEvents() {\n    drag.didMove = false;\n    document.addEventListener('mousemove', onDragMove);\n    document.addEventListener('mouseup', onDragEnd);\n\n    document.addEventListener('touchmove', onDragMove);\n    document.addEventListener('touchend', onDragEnd);\n  }\n\n  function unbindDragEvents() {\n    document.removeEventListener('mousemove', onDragMove);\n    document.removeEventListener('mouseup', onDragEnd);\n\n    document.removeEventListener('touchmove', onDragMove);\n    document.removeEventListener('touchend', onDragEnd);\n  }\n\n  function onDragMove(e: MouseEvent | TouchEvent) {\n    const toast = toastRef.current!;\n    if (drag.canDrag && toast) {\n      drag.didMove = true;\n      if (isRunning) pauseToast();\n      drag.x = getX(e as DragEvent);\n      drag.y = getY(e as DragEvent);\n      if (props.draggableDirection === Direction.X) {\n        drag.delta = drag.x - drag.start;\n      } else {\n        drag.delta = drag.y - drag.start;\n      }\n\n      // prevent false positif during a toast click\n      if (drag.start !== drag.x) drag.canCloseOnClick = false;\n      toast.style.transform = `translate${props.draggableDirection}(${drag.delta}px)`;\n      toast.style.opacity = `${1 -\n        Math.abs(drag.delta / drag.removalDistance)}`;\n    }\n  }\n\n  function onDragEnd() {\n    unbindDragEvents();\n    const toast = toastRef.current!;\n    if (drag.canDrag && drag.didMove && toast) {\n      drag.canDrag = false;\n      if (Math.abs(drag.delta) > drag.removalDistance) {\n        setPreventExitTransition(true);\n        props.closeToast();\n        return;\n      }\n      toast.style.transition = 'transform 0.2s, opacity 0.2s';\n      toast.style.transform = `translate${props.draggableDirection}(0)`;\n      toast.style.opacity = '1';\n    }\n  }\n\n  const eventHandlers: DOMAttributes<HTMLElement> = {\n    onMouseDown: onDragStart,\n    onTouchStart: onDragStart,\n    onMouseUp: onDragTransitionEnd,\n    onTouchEnd: onDragTransitionEnd\n  };\n\n  if (autoClose && pauseOnHover) {\n    eventHandlers.onMouseEnter = pauseToast;\n    eventHandlers.onMouseLeave = playToast;\n  }\n\n  // prevent toast from closing when user drags the toast\n  if (closeOnClick) {\n    eventHandlers.onClick = (e: React.MouseEvent) => {\n      onClick && onClick(e);\n      drag.canCloseOnClick && closeToast();\n    };\n  }\n\n  return {\n    playToast,\n    pauseToast,\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  };\n}\n","import * as React from 'react';\nimport { Default } from '../utils';\nimport { Theme, TypeOptions } from '../types';\n\nexport interface CloseButtonProps {\n  closeToast: (e: React.MouseEvent<HTMLElement>) => void;\n  type: TypeOptions;\n  ariaLabel?: string;\n  theme: Theme;\n}\n\nexport function CloseButton({\n  closeToast,\n  theme,\n  ariaLabel = 'close'\n}: CloseButtonProps) {\n  return (\n    <button\n      className={`${Default.CSS_NAMESPACE}__close-button ${Default.CSS_NAMESPACE}__close-button--${theme}`}\n      type=\"button\"\n      onClick={e => {\n        e.stopPropagation();\n        closeToast(e);\n      }}\n      aria-label={ariaLabel}\n    >\n      <svg aria-hidden=\"true\" viewBox=\"0 0 14 16\">\n        <path\n          fillRule=\"evenodd\"\n          d=\"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z\"\n        />\n      </svg>\n    </button>\n  );\n}\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { TYPE, Default, isFn } from './../utils';\nimport { TypeOptions, ToastClassName, Theme } from '../types';\n\nexport interface ProgressBarProps {\n  /**\n   * The animation delay which determine when to close the toast\n   */\n  delay: number;\n\n  /**\n   * Whether or not the animation is running or paused\n   */\n  isRunning: boolean;\n\n  /**\n   * Func to close the current toast\n   */\n  closeToast: () => void;\n\n  /**\n   * Optional type : info, success ...\n   */\n  type: TypeOptions;\n\n  /**\n   * The theme that is currently used\n   */\n  theme: Theme;\n\n  /**\n   * Hide or not the progress bar\n   */\n  hide?: boolean;\n\n  /**\n   * Optionnal className\n   */\n  className?: ToastClassName;\n\n  /**\n   * Optionnal inline style\n   */\n  style?: React.CSSProperties;\n\n  /**\n   * Tell wether or not controlled progress bar is used\n   */\n  controlledProgress?: boolean;\n\n  /**\n   * Controlled progress value\n   */\n  progress?: number | string;\n\n  /**\n   * Support rtl content\n   */\n  rtl?: boolean;\n\n  /**\n   * Tell if the component is visible on screen or not\n   */\n  isIn?: boolean;\n}\n\nexport function ProgressBar({\n  delay,\n  isRunning,\n  closeToast,\n  type,\n  hide,\n  className,\n  style: userStyle,\n  controlledProgress,\n  progress,\n  rtl,\n  isIn,\n  theme\n}: ProgressBarProps) {\n  const style: React.CSSProperties = {\n    ...userStyle,\n    animationDuration: `${delay}ms`,\n    animationPlayState: isRunning ? 'running' : 'paused',\n    opacity: hide ? 0 : 1\n  };\n\n  if (controlledProgress) style.transform = `scaleX(${progress})`;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__progress-bar`,\n    controlledProgress\n      ? `${Default.CSS_NAMESPACE}__progress-bar--controlled`\n      : `${Default.CSS_NAMESPACE}__progress-bar--animated`,\n    `${Default.CSS_NAMESPACE}__progress-bar-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__progress-bar--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__progress-bar--rtl`]: rtl\n    }\n  );\n  const classNames = isFn(className)\n    ? className({\n        rtl,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n\n  // 🧐 controlledProgress is derived from progress\n  // so if controlledProgress is set\n  // it means that this is also the case for progress\n  const animationEvent = {\n    [controlledProgress && progress! >= 1\n      ? 'onTransitionEnd'\n      : 'onAnimationEnd']:\n      controlledProgress && progress! < 1\n        ? null\n        : () => {\n            isIn && closeToast();\n          }\n  };\n\n  // TODO: add aria-valuenow, aria-valuemax, aria-valuemin\n\n  return (\n    <div\n      role=\"progressbar\"\n      aria-hidden={hide ? 'true' : 'false'}\n      aria-label=\"notification timer\"\n      className={classNames}\n      style={style}\n      {...animationEvent}\n    />\n  );\n}\n\nProgressBar.defaultProps = {\n  type: TYPE.DEFAULT,\n  hide: false\n};\n","import * as React from 'react';\n\nimport { Theme, TypeOptions } from '../types';\nimport { Default } from '../utils';\n\n/**\n * Used when providing custom icon\n */\nexport interface IconProps {\n  theme: Theme;\n  type: TypeOptions;\n}\n\nexport type BuiltInIconProps = React.SVGProps<SVGSVGElement> & IconProps;\n\nconst Svg: React.FC<BuiltInIconProps> = ({ theme, type, ...rest }) => (\n  <svg\n    viewBox=\"0 0 24 24\"\n    width=\"100%\"\n    height=\"100%\"\n    fill={\n      theme === 'colored'\n        ? 'currentColor'\n        : `var(--toastify-icon-color-${type})`\n    }\n    {...rest}\n  />\n);\n\nfunction Warning(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z\" />\n    </Svg>\n  );\n}\n\nfunction Info(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z\" />\n    </Svg>\n  );\n}\n\nfunction Success(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z\" />\n    </Svg>\n  );\n}\n\nfunction Error(props: BuiltInIconProps) {\n  return (\n    <Svg {...props}>\n      <path d=\"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z\" />\n    </Svg>\n  );\n}\n\nfunction Spinner() {\n  return <div className={`${Default.CSS_NAMESPACE}__spinner`} />;\n}\n\nexport const Icons = {\n  info: Info,\n  warning: Warning,\n  success: Success,\n  error: Error,\n  spinner: Spinner\n};\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { ProgressBar } from './ProgressBar';\nimport { Icons } from './Icons';\nimport { ToastProps } from '../types';\nimport { Default, isFn, isStr } from '../utils';\nimport { useToast } from '../hooks';\n\nexport const Toast: React.FC<ToastProps> = props => {\n  const {\n    isRunning,\n    preventExitTransition,\n    toastRef,\n    eventHandlers\n  } = useToast(props);\n  const {\n    closeButton,\n    children,\n    autoClose,\n    onClick,\n    type,\n    hideProgressBar,\n    closeToast,\n    transition: Transition,\n    position,\n    className,\n    style,\n    bodyClassName,\n    bodyStyle,\n    progressClassName,\n    progressStyle,\n    updateId,\n    role,\n    progress,\n    rtl,\n    toastId,\n    deleteToast,\n    isIn,\n    isLoading,\n    icon,\n    theme\n  } = props;\n  const defaultClassName = cx(\n    `${Default.CSS_NAMESPACE}__toast`,\n    `${Default.CSS_NAMESPACE}__toast-theme--${theme}`,\n    `${Default.CSS_NAMESPACE}__toast--${type}`,\n    {\n      [`${Default.CSS_NAMESPACE}__toast--rtl`]: rtl\n    }\n  );\n  const cssClasses = isFn(className)\n    ? className({\n        rtl,\n        position,\n        type,\n        defaultClassName\n      })\n    : cx(defaultClassName, className);\n  const isProgressControlled = !!progress;\n  const maybeIcon = Icons[type as keyof typeof Icons];\n  const iconProps = { theme, type };\n  let Icon: React.ReactNode = maybeIcon && maybeIcon(iconProps);\n\n  if (icon === false) {\n    Icon = void 0;\n  } else if (isFn(icon)) {\n    Icon = icon(iconProps);\n  } else if (React.isValidElement(icon)) {\n    Icon = React.cloneElement(icon, iconProps);\n  } else if (isStr(icon)) {\n    Icon = icon;\n  } else if (isLoading) {\n    Icon = Icons.spinner();\n  }\n\n  function renderCloseButton(closeButton: any) {\n    if (!closeButton) return;\n\n    const props = { closeToast, type, theme };\n\n    if (isFn(closeButton)) return closeButton(props);\n\n    if (React.isValidElement(closeButton))\n      return React.cloneElement(closeButton, props);\n  }\n\n  return (\n    <Transition\n      isIn={isIn}\n      done={deleteToast}\n      position={position}\n      preventExitTransition={preventExitTransition}\n      nodeRef={toastRef}\n    >\n      <div\n        id={toastId as string}\n        onClick={onClick}\n        className={cssClasses}\n        {...eventHandlers}\n        style={style}\n        ref={toastRef}\n      >\n        <div\n          {...(isIn && { role: role })}\n          className={\n            isFn(bodyClassName)\n              ? bodyClassName({ type })\n              : cx(`${Default.CSS_NAMESPACE}__toast-body`, bodyClassName)\n          }\n          style={bodyStyle}\n        >\n          {Icon && (\n            <div\n              className={cx(`${Default.CSS_NAMESPACE}__toast-icon`, {\n                [`${Default.CSS_NAMESPACE}--animate-icon ${Default.CSS_NAMESPACE}__zoom-enter`]: !isLoading\n              })}\n            >\n              {Icon}\n            </div>\n          )}\n          <div>{children}</div>\n        </div>\n        {renderCloseButton(closeButton)}\n        {(autoClose || isProgressControlled) && (\n          <ProgressBar\n            {...(updateId && !isProgressControlled\n              ? { key: `pb-${updateId}` }\n              : {})}\n            rtl={rtl}\n            theme={theme}\n            delay={autoClose as number}\n            isRunning={isRunning}\n            isIn={isIn}\n            closeToast={closeToast}\n            hide={hideProgressBar}\n            type={type}\n            style={progressStyle}\n            className={progressClassName}\n            controlledProgress={isProgressControlled}\n            progress={progress}\n          />\n        )}\n      </div>\n    </Transition>\n  );\n};\n","import { Default, cssTransition } from '../utils';\n\nconst Bounce = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__bounce-exit`,\n  appendPosition: true\n});\n\nconst Slide = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__slide-exit`,\n  appendPosition: true\n});\n\nconst Zoom = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__zoom-exit`\n});\n\nconst Flip = cssTransition({\n  enter: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-enter`,\n  exit: `${Default.CSS_NAMESPACE}--animate ${Default.CSS_NAMESPACE}__flip-exit`\n});\n\nexport { Bounce, Slide, Zoom, Flip };\n","import * as React from 'react';\nimport cx from 'clsx';\n\nimport { Toast } from './Toast';\nimport { CloseButton } from './CloseButton';\nimport { Bounce } from './Transitions';\nimport { POSITION, Direction, Default, parseClassName, isFn } from '../utils';\nimport { useToastContainer } from '../hooks';\nimport { ToastContainerProps, ToastPosition } from '../types';\n\nexport const ToastContainer: React.FC<ToastContainerProps> = props => {\n  const { getToastToRender, containerRef, isToastActive } = useToastContainer(\n    props\n  );\n  const { className, style, rtl, containerId } = props;\n\n  function getClassName(position: ToastPosition) {\n    const defaultClassName = cx(\n      `${Default.CSS_NAMESPACE}__toast-container`,\n      `${Default.CSS_NAMESPACE}__toast-container--${position}`,\n      { [`${Default.CSS_NAMESPACE}__toast-container--rtl`]: rtl }\n    );\n    return isFn(className)\n      ? className({\n          position,\n          rtl,\n          defaultClassName\n        })\n      : cx(defaultClassName, parseClassName(className));\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={Default.CSS_NAMESPACE as string}\n      id={containerId as string}\n    >\n      {getToastToRender((position, toastList) => {\n        const containerStyle: React.CSSProperties = !toastList.length\n          ? { ...style, pointerEvents: 'none' }\n          : { ...style };\n\n        return (\n          <div\n            className={getClassName(position)}\n            style={containerStyle}\n            key={`container-${position}`}\n          >\n            {toastList.map(({ content, props: toastProps }) => {\n              return (\n                <Toast\n                  {...toastProps}\n                  isIn={isToastActive(toastProps.toastId)}\n                  key={`toast-${toastProps.key}`}\n                  closeButton={\n                    toastProps.closeButton === true\n                      ? CloseButton\n                      : toastProps.closeButton\n                  }\n                >\n                  {content}\n                </Toast>\n              );\n            })}\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nToastContainer.defaultProps = {\n  position: POSITION.TOP_RIGHT as ToastPosition,\n  transition: Bounce,\n  rtl: false,\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeButton: CloseButton,\n  pauseOnHover: true,\n  pauseOnFocusLoss: true,\n  closeOnClick: true,\n  newestOnTop: false,\n  draggable: true,\n  draggablePercent: Default.DRAGGABLE_PERCENT as number,\n  draggableDirection: Direction.X,\n  role: 'alert',\n  theme: 'light'\n};\n","import * as React from 'react';\nimport { render } from 'react-dom';\n\nimport { POSITION, TYPE, canUseDom, isStr, isNum, isFn } from '../utils';\nimport { eventManager, OnChangeCallback, Event } from './eventManager';\nimport {\n  ToastContent,\n  ToastOptions,\n  ToastProps,\n  Id,\n  ToastContainerProps,\n  UpdateOptions,\n  ClearWaitingQueueParams,\n  NotValidatedToastProps,\n  TypeOptions\n} from '../types';\nimport { ContainerInstance } from '../hooks';\nimport { ToastContainer } from '../components';\n\ninterface EnqueuedToast {\n  content: ToastContent;\n  options: NotValidatedToastProps;\n}\n\nlet containers = new Map<ContainerInstance | Id, ContainerInstance>();\nlet latestInstance: ContainerInstance | Id;\nlet containerDomNode: HTMLElement;\nlet containerConfig: ToastContainerProps;\nlet queue: EnqueuedToast[] = [];\nlet lazy = false;\n\n/**\n * Get the toast by id, given it's in the DOM, otherwise returns null\n */\nfunction getToast(toastId: Id, { containerId }: ToastOptions) {\n  const container = containers.get(containerId || latestInstance);\n  if (!container) return null;\n\n  return container.getToast(toastId);\n}\n\n/**\n * Generate a random toastId\n */\nfunction generateToastId() {\n  return Math.random()\n    .toString(36)\n    .substring(2, 9);\n}\n\n/**\n * Generate a toastId or use the one provided\n */\nfunction getToastId(options?: ToastOptions) {\n  if (options && (isStr(options.toastId) || isNum(options.toastId))) {\n    return options.toastId;\n  }\n\n  return generateToastId();\n}\n\n/**\n * If the container is not mounted, the toast is enqueued and\n * the container lazy mounted\n */\nfunction dispatchToast(\n  content: ToastContent,\n  options: NotValidatedToastProps\n): Id {\n  if (containers.size > 0) {\n    eventManager.emit(Event.Show, content, options);\n  } else {\n    queue.push({ content, options });\n    if (lazy && canUseDom) {\n      lazy = false;\n      containerDomNode = document.createElement('div');\n      document.body.appendChild(containerDomNode);\n      render(<ToastContainer {...containerConfig} />, containerDomNode);\n    }\n  }\n\n  return options.toastId;\n}\n\n/**\n * Merge provided options with the defaults settings and generate the toastId\n */\nfunction mergeOptions(type: string, options?: ToastOptions) {\n  return {\n    ...options,\n    type: (options && options.type) || type,\n    toastId: getToastId(options)\n  } as NotValidatedToastProps;\n}\n\nfunction createToastByType(type: string) {\n  return (content: ToastContent, options?: ToastOptions) =>\n    dispatchToast(content, mergeOptions(type, options));\n}\n\nfunction toast(content: ToastContent, options?: ToastOptions) {\n  return dispatchToast(content, mergeOptions(TYPE.DEFAULT, options));\n}\n\ntoast.loading = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      isLoading: true,\n      autoClose: false,\n      closeOnClick: false,\n      closeButton: false,\n      draggable: false,\n      ...options\n    })\n  );\n\nexport interface ToastPromiseParams {\n  pending?: string | UpdateOptions;\n  success?: string | UpdateOptions;\n  error?: string | UpdateOptions;\n}\n\nfunction handlePromise<T>(\n  promise: Promise<T> | (() => Promise<T>),\n  { pending, error, success }: ToastPromiseParams,\n  options?: ToastOptions\n) {\n  let id: Id;\n\n  if (pending) {\n    id = isStr(pending)\n      ? toast.loading(pending, options)\n      : toast.loading(pending.render, {\n          ...options,\n          ...(pending as ToastOptions)\n        });\n  }\n\n  const resetParams = {\n    isLoading: null,\n    autoClose: null,\n    closeOnClick: null,\n    closeButton: null,\n    draggable: null\n  };\n\n  const resolver = (\n    type: TypeOptions,\n    input: string | UpdateOptions | undefined,\n    result: T\n  ) => {\n    // Remove the toast if the input has not been provided. This prevents the toast from hanging\n    // in the pending state if a success/error toast has not been provided.\n    if (input == null) {\n      toast.dismiss(id);\n      return;\n    }\n\n    const baseParams = {\n      type,\n      ...resetParams,\n      ...options,\n      data: result\n    };\n    const params = isStr(input) ? { render: input } : input;\n\n    // if the id is set we know that it's an update\n    if (id) {\n      toast.update(id, {\n        ...baseParams,\n        ...params\n      });\n    } else {\n      // using toast.promise without loading\n      toast(params.render, {\n        ...baseParams,\n        ...params\n      } as ToastOptions);\n    }\n\n    return result;\n  };\n\n  const p = isFn(promise) ? promise() : promise;\n\n  //call the resolvers only when needed\n  p.then(result => resolver('success', success, result)).catch(err =>\n    resolver('error', error, err)\n  );\n\n  return p;\n}\n\ntoast.promise = handlePromise;\ntoast.success = createToastByType(TYPE.SUCCESS);\ntoast.info = createToastByType(TYPE.INFO);\ntoast.error = createToastByType(TYPE.ERROR);\ntoast.warning = createToastByType(TYPE.WARNING);\ntoast.warn = toast.warning;\ntoast.dark = (content: ToastContent, options?: ToastOptions) =>\n  dispatchToast(\n    content,\n    mergeOptions(TYPE.DEFAULT, {\n      theme: 'dark',\n      ...options\n    })\n  );\n\n/**\n * Remove toast programmaticaly\n */\ntoast.dismiss = (id?: Id) => eventManager.emit(Event.Clear, id);\n\n/**\n * Clear waiting queue when limit is used\n */\ntoast.clearWaitingQueue = (params: ClearWaitingQueueParams = {}) =>\n  eventManager.emit(Event.ClearWaitingQueue, params);\n\n/**\n * return true if one container is displaying the toast\n */\ntoast.isActive = (id: Id) => {\n  let isToastActive = false;\n\n  containers.forEach(container => {\n    if (container.isToastActive && container.isToastActive(id)) {\n      isToastActive = true;\n    }\n  });\n\n  return isToastActive;\n};\n\ntoast.update = (toastId: Id, options: UpdateOptions = {}) => {\n  // if you call toast and toast.update directly nothing will be displayed\n  // this is why I defered the update\n  setTimeout(() => {\n    const toast = getToast(toastId, options as ToastOptions);\n    if (toast) {\n      const { props: oldOptions, content: oldContent } = toast;\n\n      const nextOptions = {\n        ...oldOptions,\n        ...options,\n        toastId: options.toastId || toastId,\n        updateId: generateToastId()\n      } as ToastProps & UpdateOptions;\n\n      if (nextOptions.toastId !== toastId) nextOptions.staleId = toastId;\n\n      const content = nextOptions.render || oldContent;\n      delete nextOptions.render;\n\n      dispatchToast(content, nextOptions);\n    }\n  }, 0);\n};\n\n/**\n * Used for controlled progress bar.\n */\ntoast.done = (id: Id) => {\n  toast.update(id, {\n    progress: 1\n  });\n};\n\n/**\n * Track changes. The callback get the number of toast displayed\n *\n */\ntoast.onChange = (callback: OnChangeCallback) => {\n  if (isFn(callback)) {\n    eventManager.on(Event.Change, callback);\n  }\n  return () => {\n    isFn(callback) && eventManager.off(Event.Change, callback);\n  };\n};\n\n/**\n * Configure the ToastContainer when lazy mounted\n * Prefer ToastContainer over this one\n */\ntoast.configure = (config: ToastContainerProps = {}) => {\n  lazy = true;\n  containerConfig = config;\n};\n\ntoast.POSITION = POSITION;\ntoast.TYPE = TYPE;\n\n/**\n * Wait until the ToastContainer is mounted to dispatch the toast\n * and attach isActive method\n */\neventManager\n  .on(Event.DidMount, (containerInstance: ContainerInstance) => {\n    latestInstance = containerInstance.containerId || containerInstance;\n    containers.set(latestInstance, containerInstance);\n\n    queue.forEach(item => {\n      eventManager.emit(Event.Show, item.content, item.options);\n    });\n\n    queue = [];\n  })\n  .on(Event.WillUnmount, (containerInstance: ContainerInstance) => {\n    containers.delete(containerInstance.containerId || containerInstance);\n\n    if (containers.size === 0) {\n      eventManager\n        .off(Event.Show)\n        .off(Event.Clear)\n        .off(Event.ClearWaitingQueue);\n    }\n\n    if (canUseDom && containerDomNode) {\n      document.body.removeChild(containerDomNode);\n    }\n  });\n\nexport { toast };\n"]},"metadata":{},"sourceType":"module"}