{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    products: [],\n    quantity: 0,\n    total: 0\n  },\n  reducers: {\n    addProduct: (state, action) => {\n      state.quantity += 1;\n      state.products.push(action.payload);\n      state.total += action.payload.price * action.payload.quantity;\n    },\n    removeProduct: (state, action) => {\n      state.quantity = 0;\n      state.products = [];\n      state.total = 0;\n    }\n  }\n});\nexport const {\n  addProduct,\n  removeProduct\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/home/nrk/Desktop/projeler/bookStore/client/src/redux/cartSlice.js"],"names":["createSlice","cartSlice","name","initialState","products","quantity","total","reducers","addProduct","state","action","push","payload","price","removeProduct","actions","reducer"],"mappings":"AAEA,SAASA,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,QAAQ,EAAE,EADA;AAEVC,IAAAA,QAAQ,EAAE,CAFA;AAGVC,IAAAA,KAAK,EAAE;AAHG,GAFY;AAO1BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACJ,QAAN,IAAkB,CAAlB;AACAI,MAAAA,KAAK,CAACL,QAAN,CAAeO,IAAf,CAAoBD,MAAM,CAACE,OAA3B;AACAH,MAAAA,KAAK,CAACH,KAAN,IAAeI,MAAM,CAACE,OAAP,CAAeC,KAAf,GAAuBH,MAAM,CAACE,OAAP,CAAeP,QAArD;AACH,KALK;AAMNS,IAAAA,aAAa,EAAE,CAACL,KAAD,EAAQC,MAAR,KAAmB;AAC9BD,MAAAA,KAAK,CAACJ,QAAN,GAAiB,CAAjB;AACAI,MAAAA,KAAK,CAACL,QAAN,GAAiB,EAAjB;AACAK,MAAAA,KAAK,CAACH,KAAN,GAAc,CAAd;AACH;AAVK;AAPgB,CAAD,CAA7B;AAqBA,OAAO,MAAM;AAAEE,EAAAA,UAAF;AAAcM,EAAAA;AAAd,IAAgCb,SAAS,CAACc,OAAhD;AACP,eAAed,SAAS,CAACe,OAAzB","sourcesContent":["\n\nimport { createSlice } from \"@reduxjs/toolkit\"\n\n\nconst cartSlice = createSlice({\n    name: \"cart\",\n    initialState: {\n        products: [],\n        quantity: 0,\n        total: 0,\n    },\n    reducers: {\n        addProduct: (state, action) => {\n            state.quantity += 1;\n            state.products.push(action.payload);\n            state.total += action.payload.price * action.payload.quantity\n        },\n        removeProduct: (state, action) => {\n            state.quantity = 0;\n            state.products = [];\n            state.total = 0;\n        }\n    }\n})\n\nexport const { addProduct, removeProduct } = cartSlice.actions;\nexport default cartSlice.reducer"]},"metadata":{},"sourceType":"module"}