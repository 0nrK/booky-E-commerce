{"ast":null,"code":"import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize); // Manual definition of state and output arguments\n\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","map":{"version":3,"sources":["/home/nrk/Desktop/projeler/bookStore/client/node_modules/reselect/es/index.js"],"names":["defaultMemoize","defaultEqualityCheck","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","arguments","length","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_recomputations","_lastResult","directlyPassedOptions","memoizeOptions","undefined","resultFunc","pop","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","apply","concat","selector","params","i","push","Object","assign","lastResult","recomputations","resetRecomputations","createStructuredSelector","selectors","selectorCreator","objectKeys","keys","resultSelector","key","_len3","values","_key3","reduce","composition","value","index"],"mappings":"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","sourcesContent":["import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function () {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function () {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};"]},"metadata":{},"sourceType":"module"}