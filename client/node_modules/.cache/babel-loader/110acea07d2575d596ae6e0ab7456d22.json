{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  items: [],\n  isLoading: true,\n  hasErrors: false\n};\nconst itemSlice = createSlice({\n  name: \"item\",\n  initialState,\n  reducers: {\n    GET_ITEMS(state, action) {\n      axios.get(\"http://localhost/5000\").then(res => state.items = res).catch(err => console.log(err));\n    },\n\n    GET_ITEMS_SUCCESS(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      state.items = payload;\n      state.loading = false;\n      state.hasErrors = false;\n    },\n\n    GET_ITEMS_FAILURE(state) {\n      state.loading = false;\n      state.hasErrors = true;\n    },\n\n    ADD_ITEM(state, action) {\n      const data = action.payload;\n      state.items.push(data);\n    },\n\n    DELETE_ITEM(state, action) {\n      const payload_id = action.payload._id;\n\n      try {\n        axios.delete(`http://localhost/5000/${payload_id}`);\n        return state.items.filter(item => item._id !== payload_id);\n      } catch (err) {\n        console.log(err);\n      }\n    },\n\n    GET_ITEM(state, action) {\n      const payload_id = action.payload._id;\n\n      try {\n        const data = axios.get(`http://localhost/5000/${payload_id}`);\n        state.items.push(data);\n      } catch (err) {\n        console.log(err);\n      }\n    },\n\n    EDIT_ITEM(state, action) {\n      const payload_id = action.payload._id;\n\n      try {\n        const data = axios.put(`http://localhost/5000/${payload_id}`);\n        state.items.push(data);\n        return state.items.filter(item => item._id !== payload_id);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart,\n  getTotals,\n  clearCart\n} = itemSlice.actions;\nexport default itemSlice.reducer;","map":{"version":3,"sources":["/home/nrk/Desktop/projeler/bookStore/client/src/redux/itemSlice.js"],"names":["createSlice","axios","initialState","items","isLoading","hasErrors","itemSlice","name","reducers","GET_ITEMS","state","action","get","then","res","catch","err","console","log","GET_ITEMS_SUCCESS","payload","loading","GET_ITEMS_FAILURE","ADD_ITEM","data","push","DELETE_ITEM","payload_id","_id","delete","filter","item","GET_ITEM","EDIT_ITEM","put","addToCart","removeFromCart","getTotals","clearCart","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\"\n\nconst initialState = {\n    items: [],\n    isLoading: true,\n    hasErrors: false,\n};\n\nconst itemSlice = createSlice({\n    name: \"item\",\n    initialState,\n    reducers: {\n        GET_ITEMS(state, action) {\n            axios.get(\"http://localhost/5000\")\n                .then((res) => state.items = res)\n                .catch((err) => console.log(err))\n        },\n        GET_ITEMS_SUCCESS(state, { payload }) {\n            state.items = payload\n            state.loading = false\n            state.hasErrors = false\n        },\n        GET_ITEMS_FAILURE(state) {\n            state.loading = false\n            state.hasErrors = true\n        },\n        ADD_ITEM(state, action) {\n            const data = action.payload\n            state.items.push(data)\n        },\n        DELETE_ITEM(state, action) {\n            const payload_id = action.payload._id\n            try {\n                axios.delete(`http://localhost/5000/${payload_id}`)\n                return state.items.filter((item) => item._id !== payload_id)\n            } catch (err) {\n                console.log(err)\n            }\n        },\n        GET_ITEM(state, action) {\n            const payload_id = action.payload._id\n            try {\n                const data = axios.get(`http://localhost/5000/${payload_id}`)\n                state.items.push(data)\n            } catch (err) {\n                console.log(err)\n            }\n        },\n        EDIT_ITEM(state, action) {\n            const payload_id = action.payload._id\n            try {\n                const data = axios.put(`http://localhost/5000/${payload_id}`)\n                state.items.push(data)\n                return state.items.filter((item) => item._id !== payload_id)\n            } catch (err) {\n                console.log(err)\n            }\n        }\n    }\n})\n\nexport const { addToCart, removeFromCart, getTotals, clearCart } =\n    itemSlice.actions;\n\nexport default itemSlice.reducer;"]},"metadata":{},"sourceType":"module"}