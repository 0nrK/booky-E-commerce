{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nconst initialState = {\n  cartItems: [],\n  total: 0\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      console.log(action.payload);\n      const {\n        _id\n      } = action.payload;\n      console.log(_id);\n      state.cartItems.map(item => {\n        if (_id !== item._id) {\n          state.cartItems.push(action.payload);\n          console.log(cartItems);\n          toast.success(\"Product added to cart\", {\n            position: \"bottom-left\"\n          });\n        }\n      });\n      /*  state.cartItems.push(action.payload)\n       state.total += 1\n       state.count += action.payload.price\n       console.log(state); */\n    },\n\n    removeFromCart(state, action) {\n      toast.error(\"Product removed from cart\", {\n        position: \"bottom-left\"\n      });\n      return state.cartItems.filter(item => item._id !== action.payload._id);\n    },\n\n    clearCart(state, action) {\n      state.cartItems = [];\n      toast.error(\"Cart cleared\", {\n        position: \"bottom-left\"\n      });\n    }\n\n  }\n});\nexport const {\n  addToCart,\n  removeFromCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/home/nrk/Desktop/projeler/bookStore/client/src/redux/cartSlice.js"],"names":["createSlice","toast","initialState","cartItems","total","cartSlice","name","reducers","addToCart","state","action","console","log","payload","_id","map","item","push","success","position","removeFromCart","error","filter","clearCart","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE,EADM;AAEjBC,EAAAA,KAAK,EAAE;AAFU,CAArB;AAKA,MAAMC,SAAS,GAAGL,WAAW,CAAC;AAC1BM,EAAAA,IAAI,EAAE,MADoB;AAE1BJ,EAAAA,YAF0B;AAG1BK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,OAAnB;AACA,YAAM;AAAEC,QAAAA;AAAF,UAAUJ,MAAM,CAACG,OAAvB;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACAL,MAAAA,KAAK,CAACN,SAAN,CAAgBY,GAAhB,CAAoBC,IAAI,IAAI;AACxB,YAAIF,GAAG,KAAKE,IAAI,CAACF,GAAjB,EAAsB;AAClBL,UAAAA,KAAK,CAACN,SAAN,CAAgBc,IAAhB,CAAqBP,MAAM,CAACG,OAA5B;AACAF,UAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AACAF,UAAAA,KAAK,CAACiB,OAAN,CAAc,uBAAd,EAAuC;AACnCC,YAAAA,QAAQ,EAAE;AADyB,WAAvC;AAGH;AACJ,OARD;AASA;AACZ;AACA;AACA;AACS,KAlBK;;AAmBNC,IAAAA,cAAc,CAACX,KAAD,EAAQC,MAAR,EAAgB;AAC1BT,MAAAA,KAAK,CAACoB,KAAN,CAAY,2BAAZ,EAAyC;AACrCF,QAAAA,QAAQ,EAAE;AAD2B,OAAzC;AAGA,aAAOV,KAAK,CAACN,SAAN,CAAgBmB,MAAhB,CAAwBN,IAAD,IAAUA,IAAI,CAACF,GAAL,KAAaJ,MAAM,CAACG,OAAP,CAAeC,GAA7D,CAAP;AACH,KAxBK;;AAyBNS,IAAAA,SAAS,CAACd,KAAD,EAAQC,MAAR,EAAgB;AACrBD,MAAAA,KAAK,CAACN,SAAN,GAAkB,EAAlB;AACAF,MAAAA,KAAK,CAACoB,KAAN,CAAY,cAAZ,EAA4B;AAAEF,QAAAA,QAAQ,EAAE;AAAZ,OAA5B;AACH;;AA5BK;AAHgB,CAAD,CAA7B;AAoCA,OAAO,MAAM;AAAEX,EAAAA,SAAF;AAAaY,EAAAA;AAAb,IAAgCf,SAAS,CAACmB,OAAhD;AAEP,eAAenB,SAAS,CAACoB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\n\n\nconst initialState = {\n    cartItems: [],\n    total: 0,\n}\n\nconst cartSlice = createSlice({\n    name: \"cart\",\n    initialState,\n    reducers: {\n        addToCart(state, action) {\n            console.log(action.payload);\n            const { _id } = action.payload\n            console.log(_id);\n            state.cartItems.map(item => {\n                if (_id !== item._id) {\n                    state.cartItems.push(action.payload)\n                    console.log(cartItems)\n                    toast.success(\"Product added to cart\", {\n                        position: \"bottom-left\",\n                    })\n                }\n            })\n            /*  state.cartItems.push(action.payload)\n             state.total += 1\n             state.count += action.payload.price\n             console.log(state); */\n        },\n        removeFromCart(state, action) {\n            toast.error(\"Product removed from cart\", {\n                position: \"bottom-left\",\n            });\n            return state.cartItems.filter((item) => item._id !== action.payload._id)\n        },\n        clearCart(state, action) {\n            state.cartItems = []\n            toast.error(\"Cart cleared\", { position: \"bottom-left\" });\n        }\n    }\n})\n\n\nexport const { addToCart, removeFromCart } = cartSlice.actions\n\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}