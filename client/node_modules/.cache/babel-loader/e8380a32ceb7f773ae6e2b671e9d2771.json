{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\nconst initialState = {\n  cartItems: []\n};\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState,\n  reducers: {\n    addToCart(state, action) {\n      state.cartItems.push(action.payload);\n      toast.success(\"Product added to cart\", {\n        position: \"bottom-left\"\n      });\n    },\n\n    removeFromCart(state, action) {\n      return state.cartItems.filter(item => item._id !== action.payload._id);\n      toast.error(\"Product removed from cart\", {\n        position: \"bottom-left\"\n      });\n    }\n\n  }\n});\nexport const {\n  addToCart\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"sources":["/home/nrk/Desktop/projeler/bookStore/client/src/redux/cartSlice.js"],"names":["createSlice","toast","initialState","cartItems","cartSlice","name","reducers","addToCart","state","action","push","payload","success","position","removeFromCart","filter","item","_id","error","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAGA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,SAAS,EAAE;AADM,CAArB;AAIA,MAAMC,SAAS,GAAGJ,WAAW,CAAC;AAC1BK,EAAAA,IAAI,EAAE,MADoB;AAE1BH,EAAAA,YAF0B;AAG1BI,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrBD,MAAAA,KAAK,CAACL,SAAN,CAAgBO,IAAhB,CAAqBD,MAAM,CAACE,OAA5B;AACAV,MAAAA,KAAK,CAACW,OAAN,CAAc,uBAAd,EAAuC;AACnCC,QAAAA,QAAQ,EAAE;AADyB,OAAvC;AAGH,KANK;;AAONC,IAAAA,cAAc,CAACN,KAAD,EAAQC,MAAR,EAAgB;AAC1B,aAAOD,KAAK,CAACL,SAAN,CAAgBY,MAAhB,CAAwBC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA7D,CAAP;AACAhB,MAAAA,KAAK,CAACiB,KAAN,CAAY,2BAAZ,EAAyC;AACrCL,QAAAA,QAAQ,EAAE;AAD2B,OAAzC;AAGH;;AAZK;AAHgB,CAAD,CAA7B;AAoBA,OAAO,MAAM;AAAEN,EAAAA;AAAF,IAAgBH,SAAS,CAACe,OAAhC;AAEP,eAAef,SAAS,CAACgB,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { toast } from \"react-toastify\";\n\n\nconst initialState = {\n    cartItems: [],\n}\n\nconst cartSlice = createSlice({\n    name: \"cart\",\n    initialState,\n    reducers: {\n        addToCart(state, action) {\n            state.cartItems.push(action.payload)\n            toast.success(\"Product added to cart\", {\n                position: \"bottom-left\",\n            })\n        },\n        removeFromCart(state, action) {\n            return state.cartItems.filter((item) => item._id !== action.payload._id)\n            toast.error(\"Product removed from cart\", {\n                position: \"bottom-left\",\n            });\n        }\n    }\n})\n\n\nexport const { addToCart } = cartSlice.actions\n\nexport default cartSlice.reducer;"]},"metadata":{},"sourceType":"module"}