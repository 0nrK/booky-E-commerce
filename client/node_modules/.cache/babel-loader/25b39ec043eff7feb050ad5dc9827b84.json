{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rtrim;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction rtrim(str, chars) {\n  (0, _assertString.default)(str);\n\n  if (chars) {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\n    var pattern = new RegExp(\"[\".concat(chars.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), \"]+$\"), 'g');\n    return str.replace(pattern, '');\n  } // Use a faster and more safe than regex trim method https://blog.stevenlevithan.com/archives/faster-trim-javascript\n\n\n  var strIndex = str.length - 1;\n\n  while (/\\s/.test(str.charAt(strIndex))) {\n    strIndex -= 1;\n  }\n\n  return str.slice(0, strIndex + 1);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"sources":["/home/nrk/Desktop/projeler/bookStore/client/node_modules/validator/lib/rtrim.js"],"names":["Object","defineProperty","exports","value","default","rtrim","_assertString","_interopRequireDefault","require","obj","__esModule","str","chars","pattern","RegExp","concat","replace","strIndex","length","test","charAt","slice","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,KAAlB;;AAEA,IAAIC,aAAa,GAAGC,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA1C;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD;;AAE/F,SAASJ,KAAT,CAAeM,GAAf,EAAoBC,KAApB,EAA2B;AACzB,GAAC,GAAGN,aAAa,CAACF,OAAlB,EAA2BO,GAA3B;;AAEA,MAAIC,KAAJ,EAAW;AACT;AACA,QAAIC,OAAO,GAAG,IAAIC,MAAJ,CAAW,IAAIC,MAAJ,CAAWH,KAAK,CAACI,OAAN,CAAc,qBAAd,EAAqC,MAArC,CAAX,EAAyD,KAAzD,CAAX,EAA4E,GAA5E,CAAd;AACA,WAAOL,GAAG,CAACK,OAAJ,CAAYH,OAAZ,EAAqB,EAArB,CAAP;AACD,GAPwB,CAOvB;;;AAGF,MAAII,QAAQ,GAAGN,GAAG,CAACO,MAAJ,GAAa,CAA5B;;AAEA,SAAO,KAAKC,IAAL,CAAUR,GAAG,CAACS,MAAJ,CAAWH,QAAX,CAAV,CAAP,EAAwC;AACtCA,IAAAA,QAAQ,IAAI,CAAZ;AACD;;AAED,SAAON,GAAG,CAACU,KAAJ,CAAU,CAAV,EAAaJ,QAAQ,GAAG,CAAxB,CAAP;AACD;;AAEDK,MAAM,CAACpB,OAAP,GAAiBA,OAAO,CAACE,OAAzB;AACAkB,MAAM,CAACpB,OAAP,CAAeE,OAAf,GAAyBF,OAAO,CAACE,OAAjC","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rtrim;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction rtrim(str, chars) {\n  (0, _assertString.default)(str);\n\n  if (chars) {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions#Escaping\n    var pattern = new RegExp(\"[\".concat(chars.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), \"]+$\"), 'g');\n    return str.replace(pattern, '');\n  } // Use a faster and more safe than regex trim method https://blog.stevenlevithan.com/archives/faster-trim-javascript\n\n\n  var strIndex = str.length - 1;\n\n  while (/\\s/.test(str.charAt(strIndex))) {\n    strIndex -= 1;\n  }\n\n  return str.slice(0, strIndex + 1);\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"]},"metadata":{},"sourceType":"script"}