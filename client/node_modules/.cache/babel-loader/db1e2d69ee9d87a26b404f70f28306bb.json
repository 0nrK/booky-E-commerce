{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISO8601;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/* eslint-disable max-len */\n// from http://goo.gl/0ejHHW\n\n\nvar iso8601 = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/; // same as above, except with a strict 'T' separator between date and time\n\nvar iso8601StrictSeparator = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\n/* eslint-enable max-len */\n\nvar isValidDate = function isValidDate(str) {\n  // str must have passed the ISO8601 check\n  // this check is meant to catch invalid dates\n  // like 2009-02-31\n  // first check for ordinal dates\n  var ordinalMatch = str.match(/^(\\d{4})-?(\\d{3})([ T]{1}\\.*|$)/);\n\n  if (ordinalMatch) {\n    var oYear = Number(ordinalMatch[1]);\n    var oDay = Number(ordinalMatch[2]); // if is leap year\n\n    if (oYear % 4 === 0 && oYear % 100 !== 0 || oYear % 400 === 0) return oDay <= 366;\n    return oDay <= 365;\n  }\n\n  var match = str.match(/(\\d{4})-?(\\d{0,2})-?(\\d*)/).map(Number);\n  var year = match[1];\n  var month = match[2];\n  var day = match[3];\n  var monthString = month ? \"0\".concat(month).slice(-2) : month;\n  var dayString = day ? \"0\".concat(day).slice(-2) : day; // create a date object and compare\n\n  var d = new Date(\"\".concat(year, \"-\").concat(monthString || '01', \"-\").concat(dayString || '01'));\n\n  if (month && day) {\n    return d.getUTCFullYear() === year && d.getUTCMonth() + 1 === month && d.getUTCDate() === day;\n  }\n\n  return true;\n};\n\nfunction isISO8601(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  (0, _assertString.default)(str);\n  var check = options.strictSeparator ? iso8601StrictSeparator.test(str) : iso8601.test(str);\n  if (check && options.strict) return isValidDate(str);\n  return check;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;","map":{"version":3,"sources":["/home/nrk/Desktop/projeler/bookStore/client/node_modules/validator/lib/isISO8601.js"],"names":["Object","defineProperty","exports","value","default","isISO8601","_assertString","_interopRequireDefault","require","obj","__esModule","iso8601","iso8601StrictSeparator","isValidDate","str","ordinalMatch","match","oYear","Number","oDay","map","year","month","day","monthString","concat","slice","dayString","d","Date","getUTCFullYear","getUTCMonth","getUTCDate","options","arguments","length","undefined","check","strictSeparator","test","strict","module"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBC,SAAlB;;AAEA,IAAIC,aAAa,GAAGC,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA1C;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEL,IAAAA,OAAO,EAAEK;AAAX,GAArC;AAAwD;AAE/F;AACA;;;AACA,IAAIE,OAAO,GAAG,4RAAd,C,CAA4S;;AAE5S,IAAIC,sBAAsB,GAAG,0RAA7B;AACA;;AAEA,IAAIC,WAAW,GAAG,SAASA,WAAT,CAAqBC,GAArB,EAA0B;AAC1C;AACA;AACA;AACA;AACA,MAAIC,YAAY,GAAGD,GAAG,CAACE,KAAJ,CAAU,iCAAV,CAAnB;;AAEA,MAAID,YAAJ,EAAkB;AAChB,QAAIE,KAAK,GAAGC,MAAM,CAACH,YAAY,CAAC,CAAD,CAAb,CAAlB;AACA,QAAII,IAAI,GAAGD,MAAM,CAACH,YAAY,CAAC,CAAD,CAAb,CAAjB,CAFgB,CAEoB;;AAEpC,QAAIE,KAAK,GAAG,CAAR,KAAc,CAAd,IAAmBA,KAAK,GAAG,GAAR,KAAgB,CAAnC,IAAwCA,KAAK,GAAG,GAAR,KAAgB,CAA5D,EAA+D,OAAOE,IAAI,IAAI,GAAf;AAC/D,WAAOA,IAAI,IAAI,GAAf;AACD;;AAED,MAAIH,KAAK,GAAGF,GAAG,CAACE,KAAJ,CAAU,2BAAV,EAAuCI,GAAvC,CAA2CF,MAA3C,CAAZ;AACA,MAAIG,IAAI,GAAGL,KAAK,CAAC,CAAD,CAAhB;AACA,MAAIM,KAAK,GAAGN,KAAK,CAAC,CAAD,CAAjB;AACA,MAAIO,GAAG,GAAGP,KAAK,CAAC,CAAD,CAAf;AACA,MAAIQ,WAAW,GAAGF,KAAK,GAAG,IAAIG,MAAJ,CAAWH,KAAX,EAAkBI,KAAlB,CAAwB,CAAC,CAAzB,CAAH,GAAiCJ,KAAxD;AACA,MAAIK,SAAS,GAAGJ,GAAG,GAAG,IAAIE,MAAJ,CAAWF,GAAX,EAAgBG,KAAhB,CAAsB,CAAC,CAAvB,CAAH,GAA+BH,GAAlD,CApB0C,CAoBa;;AAEvD,MAAIK,CAAC,GAAG,IAAIC,IAAJ,CAAS,GAAGJ,MAAH,CAAUJ,IAAV,EAAgB,GAAhB,EAAqBI,MAArB,CAA4BD,WAAW,IAAI,IAA3C,EAAiD,GAAjD,EAAsDC,MAAtD,CAA6DE,SAAS,IAAI,IAA1E,CAAT,CAAR;;AAEA,MAAIL,KAAK,IAAIC,GAAb,EAAkB;AAChB,WAAOK,CAAC,CAACE,cAAF,OAAuBT,IAAvB,IAA+BO,CAAC,CAACG,WAAF,KAAkB,CAAlB,KAAwBT,KAAvD,IAAgEM,CAAC,CAACI,UAAF,OAAmBT,GAA1F;AACD;;AAED,SAAO,IAAP;AACD,CA7BD;;AA+BA,SAASlB,SAAT,CAAmBS,GAAnB,EAAwB;AACtB,MAAImB,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,GAAC,GAAG5B,aAAa,CAACF,OAAlB,EAA2BU,GAA3B;AACA,MAAIuB,KAAK,GAAGJ,OAAO,CAACK,eAAR,GAA0B1B,sBAAsB,CAAC2B,IAAvB,CAA4BzB,GAA5B,CAA1B,GAA6DH,OAAO,CAAC4B,IAAR,CAAazB,GAAb,CAAzE;AACA,MAAIuB,KAAK,IAAIJ,OAAO,CAACO,MAArB,EAA6B,OAAO3B,WAAW,CAACC,GAAD,CAAlB;AAC7B,SAAOuB,KAAP;AACD;;AAEDI,MAAM,CAACvC,OAAP,GAAiBA,OAAO,CAACE,OAAzB;AACAqC,MAAM,CAACvC,OAAP,CAAeE,OAAf,GAAyBF,OAAO,CAACE,OAAjC","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isISO8601;\n\nvar _assertString = _interopRequireDefault(require(\"./util/assertString\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable max-len */\n// from http://goo.gl/0ejHHW\nvar iso8601 = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T\\s]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/; // same as above, except with a strict 'T' separator between date and time\n\nvar iso8601StrictSeparator = /^([\\+-]?\\d{4}(?!\\d{2}\\b))((-?)((0[1-9]|1[0-2])(\\3([12]\\d|0[1-9]|3[01]))?|W([0-4]\\d|5[0-3])(-?[1-7])?|(00[1-9]|0[1-9]\\d|[12]\\d{2}|3([0-5]\\d|6[1-6])))([T]((([01]\\d|2[0-3])((:?)[0-5]\\d)?|24:?00)([\\.,]\\d+(?!:))?)?(\\17[0-5]\\d([\\.,]\\d+)?)?([zZ]|([\\+-])([01]\\d|2[0-3]):?([0-5]\\d)?)?)?)?$/;\n/* eslint-enable max-len */\n\nvar isValidDate = function isValidDate(str) {\n  // str must have passed the ISO8601 check\n  // this check is meant to catch invalid dates\n  // like 2009-02-31\n  // first check for ordinal dates\n  var ordinalMatch = str.match(/^(\\d{4})-?(\\d{3})([ T]{1}\\.*|$)/);\n\n  if (ordinalMatch) {\n    var oYear = Number(ordinalMatch[1]);\n    var oDay = Number(ordinalMatch[2]); // if is leap year\n\n    if (oYear % 4 === 0 && oYear % 100 !== 0 || oYear % 400 === 0) return oDay <= 366;\n    return oDay <= 365;\n  }\n\n  var match = str.match(/(\\d{4})-?(\\d{0,2})-?(\\d*)/).map(Number);\n  var year = match[1];\n  var month = match[2];\n  var day = match[3];\n  var monthString = month ? \"0\".concat(month).slice(-2) : month;\n  var dayString = day ? \"0\".concat(day).slice(-2) : day; // create a date object and compare\n\n  var d = new Date(\"\".concat(year, \"-\").concat(monthString || '01', \"-\").concat(dayString || '01'));\n\n  if (month && day) {\n    return d.getUTCFullYear() === year && d.getUTCMonth() + 1 === month && d.getUTCDate() === day;\n  }\n\n  return true;\n};\n\nfunction isISO8601(str) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  (0, _assertString.default)(str);\n  var check = options.strictSeparator ? iso8601StrictSeparator.test(str) : iso8601.test(str);\n  if (check && options.strict) return isValidDate(str);\n  return check;\n}\n\nmodule.exports = exports.default;\nmodule.exports.default = exports.default;"]},"metadata":{},"sourceType":"script"}