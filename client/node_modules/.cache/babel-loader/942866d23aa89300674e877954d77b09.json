{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst initialState = {\n  items: [],\n  isLoading: true,\n  hasErrors: false\n};\nconst itemSlice = createSlice({\n  name: \"item\",\n  initialState,\n  reducers: {\n    GET_ITEMS(state, action) {\n      state.isLoading = true;\n    },\n\n    GET_ITEMS_SUCCESS(state, _ref) {\n      let {\n        payload\n      } = _ref;\n      state.items = payload;\n      state.loading = false;\n      state.hasErrors = false;\n    },\n\n    GET_ITEMS_FAILURE(state) {\n      state.loading = false;\n      state.hasErrors = true;\n    },\n\n    ADD_ITEM(state, action) {\n      const data = action.payload;\n      state.items.push(data);\n    },\n\n    DELETE_ITEM(state, action) {\n      const payload_id = action.payload._id;\n\n      try {\n        axios.delete(`http://localhost/5000/${payload_id}`);\n        return state.items.filter(item => item._id !== payload_id);\n      } catch (err) {\n        console.log(err);\n      }\n    },\n\n    GET_ITEM(state, action) {\n      const payload_id = action.payload._id;\n\n      try {\n        const data = axios.get(`http://localhost/5000/${payload_id}`);\n        state.items.push(data);\n      } catch (err) {\n        console.log(err);\n      }\n    },\n\n    EDIT_ITEM(state, action) {\n      const payload_id = action.payload._id;\n\n      try {\n        const data = axios.put(`http://localhost/5000/${payload_id}`);\n        state.items.push(data);\n        return state.items.filter(item => item._id !== payload_id);\n      } catch (err) {\n        console.log(err);\n      }\n    }\n\n  }\n});\nexport const {\n  GET_ITEMS,\n  GET_ITEMS_FAILURE,\n  GET_ITEMS_SUCCESS\n} = itemSlice.actions;\nexport default itemSlice.reducer;","map":{"version":3,"sources":["/home/nrk/Desktop/projeler/bookStore/client/src/redux/itemSlice.js"],"names":["createSlice","axios","initialState","items","isLoading","hasErrors","itemSlice","name","reducers","GET_ITEMS","state","action","GET_ITEMS_SUCCESS","payload","loading","GET_ITEMS_FAILURE","ADD_ITEM","data","push","DELETE_ITEM","payload_id","_id","delete","filter","item","err","console","log","GET_ITEM","get","EDIT_ITEM","put","actions","reducer"],"mappings":"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","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\"\n\nconst initialState = {\n    items: [],\n    isLoading: true,\n    hasErrors: false,\n};\n\nconst itemSlice = createSlice({\n    name: \"item\",\n    initialState,\n    reducers: {\n        GET_ITEMS(state, action) {\n            state.isLoading = true;\n        },\n        GET_ITEMS_SUCCESS(state, { payload }) {\n            state.items = payload\n            state.loading = false\n            state.hasErrors = false\n        },\n        GET_ITEMS_FAILURE(state) {\n            state.loading = false\n            state.hasErrors = true\n        },\n        ADD_ITEM(state, action) {\n            const data = action.payload\n            state.items.push(data)\n        },\n        DELETE_ITEM(state, action) {\n            const payload_id = action.payload._id\n            try {\n                axios.delete(`http://localhost/5000/${payload_id}`)\n                return state.items.filter((item) => item._id !== payload_id)\n            } catch (err) {\n                console.log(err)\n            }\n        },\n        GET_ITEM(state, action) {\n            const payload_id = action.payload._id\n            try {\n                const data = axios.get(`http://localhost/5000/${payload_id}`)\n                state.items.push(data)\n            } catch (err) {\n                console.log(err)\n            }\n        },\n        EDIT_ITEM(state, action) {\n            const payload_id = action.payload._id\n            try {\n                const data = axios.put(`http://localhost/5000/${payload_id}`)\n                state.items.push(data)\n                return state.items.filter((item) => item._id !== payload_id)\n            } catch (err) {\n                console.log(err)\n            }\n        }\n    }\n})\n\nexport const { GET_ITEMS, GET_ITEMS_FAILURE, GET_ITEMS_SUCCESS } =\n    itemSlice.actions;\n\nexport default itemSlice.reducer;"]},"metadata":{},"sourceType":"module"}